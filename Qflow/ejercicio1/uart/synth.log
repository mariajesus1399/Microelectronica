Running yosys for verilog parsing and synthesis

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)


-- Executing script file `uart.ys' --

1. Executing Liberty frontend.
Imported 39 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \uart

3.1.2. Analyzing design hierarchy..
Top module:  \uart
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\uart.$proc$uart.v:119$19'.
Found async reset \reset in `\uart.$proc$uart.v:55$1'.

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\uart.$proc$uart.v:119$19'.
     1/5: $0\tx_cnt[3:0]
     2/5: $0\tx_over_run[0:0]
     3/5: $0\tx_reg[7:0]
     4/5: $0\tx_empty[0:0]
     5/5: $0\tx_out[0:0]
Creating decoders for process `\uart.$proc$uart.v:55$1'.
     1/17: $0\rx_reg[7:0] [7]
     2/17: $0\rx_reg[7:0] [6]
     3/17: $0\rx_reg[7:0] [5]
     4/17: $0\rx_reg[7:0] [4]
     5/17: $0\rx_reg[7:0] [3]
     6/17: $0\rx_reg[7:0] [2]
     7/17: $0\rx_reg[7:0] [1]
     8/17: $0\rx_reg[7:0] [0]
     9/17: $0\rx_d2[0:0]
    10/17: $0\rx_d1[0:0]
    11/17: $0\rx_over_run[0:0]
    12/17: $0\rx_frame_err[0:0]
    13/17: $0\rx_cnt[3:0]
    14/17: $0\rx_sample_cnt[3:0]
    15/17: $0\rx_busy[0:0]
    16/17: $0\rx_empty[0:0]
    17/17: $0\rx_data[7:0]

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\uart.\tx_out' using process `\uart.$proc$uart.v:119$19'.
  created $adff cell `$procdff$354' with positive edge clock and positive level reset.
Creating register for signal `\uart.\tx_empty' using process `\uart.$proc$uart.v:119$19'.
  created $adff cell `$procdff$355' with positive edge clock and positive level reset.
Creating register for signal `\uart.\tx_reg' using process `\uart.$proc$uart.v:119$19'.
  created $adff cell `$procdff$356' with positive edge clock and positive level reset.
Creating register for signal `\uart.\tx_over_run' using process `\uart.$proc$uart.v:119$19'.
  created $adff cell `$procdff$357' with positive edge clock and positive level reset.
Creating register for signal `\uart.\tx_cnt' using process `\uart.$proc$uart.v:119$19'.
  created $adff cell `$procdff$358' with positive edge clock and positive level reset.
Creating register for signal `\uart.\rx_data' using process `\uart.$proc$uart.v:55$1'.
  created $adff cell `$procdff$359' with positive edge clock and positive level reset.
Creating register for signal `\uart.\rx_empty' using process `\uart.$proc$uart.v:55$1'.
  created $adff cell `$procdff$360' with positive edge clock and positive level reset.
Creating register for signal `\uart.\rx_reg' using process `\uart.$proc$uart.v:55$1'.
  created $adff cell `$procdff$361' with positive edge clock and positive level reset.
Creating register for signal `\uart.\rx_sample_cnt' using process `\uart.$proc$uart.v:55$1'.
  created $adff cell `$procdff$362' with positive edge clock and positive level reset.
Creating register for signal `\uart.\rx_cnt' using process `\uart.$proc$uart.v:55$1'.
  created $adff cell `$procdff$363' with positive edge clock and positive level reset.
Creating register for signal `\uart.\rx_frame_err' using process `\uart.$proc$uart.v:55$1'.
  created $adff cell `$procdff$364' with positive edge clock and positive level reset.
Creating register for signal `\uart.\rx_over_run' using process `\uart.$proc$uart.v:55$1'.
  created $adff cell `$procdff$365' with positive edge clock and positive level reset.
Creating register for signal `\uart.\rx_d1' using process `\uart.$proc$uart.v:55$1'.
  created $adff cell `$procdff$366' with positive edge clock and positive level reset.
Creating register for signal `\uart.\rx_d2' using process `\uart.$proc$uart.v:55$1'.
  created $adff cell `$procdff$367' with positive edge clock and positive level reset.
Creating register for signal `\uart.\rx_busy' using process `\uart.$proc$uart.v:55$1'.
  created $adff cell `$procdff$368' with positive edge clock and positive level reset.

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 7 empty switches in `\uart.$proc$uart.v:119$19'.
Removing empty process `uart.$proc$uart.v:119$19'.
Found and cleaned up 11 empty switches in `\uart.$proc$uart.v:55$1'.
Removing empty process `uart.$proc$uart.v:55$1'.
Cleaned up 18 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$eq$uart.v:89$7' (1) in module `\uart' with constant driver `$eq$uart.v:89$7_Y = \rx_d2'.
Replacing $eq cell `$eq$uart.v:89$8' in module `uart' with $logic_not.
Replacing $eq cell `$eq$uart.v:100$16' in module `uart' with inverter.
Replacing $eq cell `$eq$uart.v:137$24' in module `uart' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$39' in module `uart'.
Optimizing away select inverter for $mux cell `$procmux$43' in module `uart'.
Optimizing away select inverter for $mux cell `$procmux$49' in module `uart'.
Optimizing away select inverter for $mux cell `$procmux$55' in module `uart'.
Replacing $eq cell `$procmux$237_CMP0' in module `uart' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$328' in module `uart'.
Optimizing away select inverter for $mux cell `$procmux$254' in module `uart'.
Optimizing away select inverter for $mux cell `$procmux$272' in module `uart'.
Optimizing away select inverter for $mux cell `$procmux$338' in module `uart'.

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
  removing unused `$not' cell `$eq$uart.v:100$16'.
  removing unused `$mux' cell `$ternary$uart.v:106$17'.
  removing unused `$logic_not' cell `$logic_not$uart.v:113$18'.
  removing unused `$logic_not' cell `$logic_not$uart.v:128$20'.
  removing unused `$logic_not' cell `$logic_not$uart.v:149$31'.
  removing unused `$mux' cell `$procmux$43'.
  removing unused `$mux' cell `$procmux$45'.
  removing unused `$mux' cell `$procmux$254'.
  removing unused `$mux' cell `$procmux$256'.
  removing unused `$mux' cell `$procmux$259'.
  removing unused `$mux' cell `$procmux$261'.
  removing unused `$mux' cell `$procmux$263'.
  removing unused `$mux' cell `$procmux$265'.
  removing unused `$mux' cell `$procmux$272'.
  removing unused `$mux' cell `$procmux$274'.
  removing unused `$mux' cell `$procmux$277'.
  removing unused `$mux' cell `$procmux$279'.
  removing unused `$mux' cell `$procmux$281'.
  removing unused `$mux' cell `$procmux$283'.
  removing unused `$adff' cell `$procdff$357'.
  removing unused `$adff' cell `$procdff$364'.
  removing unused `$adff' cell `$procdff$365'.
  removing unused non-port wire \rx_over_run.
  removing unused non-port wire \rx_frame_err.
  removing unused non-port wire \tx_over_run.
  removed 3 unused temporary wires.

3.5. Executing CHECK pass (checking for obvious problems).
checking module uart..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$132 (pure)
    Root of a mux tree: $procmux$153 (pure)
    Root of a mux tree: $procmux$175 (pure)
    Root of a mux tree: $procmux$198 (pure)
    Root of a mux tree: $procmux$222 (pure)
    Root of a mux tree: $procmux$247 (pure)
    Root of a mux tree: $procmux$287
    Root of a mux tree: $procmux$298 (pure)
    Root of a mux tree: $procmux$307 (pure)
    Root of a mux tree: $procmux$311
    Root of a mux tree: $procmux$328 (pure)
    Root of a mux tree: $procmux$331
    Root of a mux tree: $procmux$349 (pure)
    Root of a mux tree: $procmux$352 (pure)
    Root of a mux tree: $procmux$39 (pure)
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57
      Replacing known input bits on port A of cell $procmux$55: \tx_empty -> 1'0
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $procmux$93 (pure)
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$325.
Removed 1 multiplexer ports.

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    New ctrl vector for $mux cell $procmux$55: { }
  Optimizing cells in module \uart.
Performed a total of 1 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.6.8. Executing OPT_EXPR pass (perform const folding).

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$132 (pure)
    Root of a mux tree: $procmux$153 (pure)
    Root of a mux tree: $procmux$175 (pure)
    Root of a mux tree: $procmux$198 (pure)
    Root of a mux tree: $procmux$222 (pure)
    Root of a mux tree: $procmux$247 (pure)
    Root of a mux tree: $procmux$287
    Root of a mux tree: $procmux$298 (pure)
    Root of a mux tree: $procmux$307 (pure)
    Root of a mux tree: $procmux$311
    Root of a mux tree: $procmux$328 (pure)
    Root of a mux tree: $procmux$331
    Root of a mux tree: $procmux$349 (pure)
    Root of a mux tree: $procmux$352 (pure)
    Root of a mux tree: $procmux$39 (pure)
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $procmux$93 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

3.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.6.15. Executing OPT_EXPR pass (perform const folding).

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell uart.$add$uart.v:86$5 ($add).
Removed top 28 bits (of 32) from port Y of cell uart.$add$uart.v:86$5 ($add).
Removed top 1 bits (of 4) from port B of cell uart.$eq$uart.v:88$6 ($eq).
Removed top 31 bits (of 32) from port B of cell uart.$add$uart.v:92$10 ($add).
Removed top 28 bits (of 32) from port Y of cell uart.$add$uart.v:92$10 ($add).
Removed top 31 bits (of 32) from port B of cell uart.$gt$uart.v:94$11 ($gt).
Removed top 28 bits (of 32) from port B of cell uart.$lt$uart.v:94$12 ($lt).
Removed top 31 bits (of 32) from port B of cell uart.$sub$uart.v:95$14 ($sub).
Removed top 31 bits (of 32) from port B of cell uart.$add$uart.v:136$23 ($add).
Removed top 28 bits (of 32) from port Y of cell uart.$add$uart.v:136$23 ($add).
Removed top 31 bits (of 32) from port B of cell uart.$gt$uart.v:140$25 ($gt).
Removed top 28 bits (of 32) from port B of cell uart.$lt$uart.v:140$26 ($lt).
Removed top 31 bits (of 32) from port B of cell uart.$sub$uart.v:141$28 ($sub).
Removed top 29 bits (of 32) from port B of cell uart.$procmux$83_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell uart.$procmux$102_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell uart.$procmux$122_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell uart.$procmux$143_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell uart.$procmux$165_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell uart.$procmux$188_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell uart.$procmux$212_CMP0 ($eq).
Removed top 28 bits (of 32) from wire uart.$add$uart.v:136$23_Y.
Removed top 28 bits (of 32) from wire uart.$add$uart.v:86$5_Y.

3.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module uart:
  creating $macc model for $add$uart.v:136$23 ($add).
  creating $macc model for $add$uart.v:86$5 ($add).
  creating $macc model for $add$uart.v:92$10 ($add).
  creating $macc model for $sub$uart.v:141$28 ($sub).
  creating $macc model for $sub$uart.v:95$14 ($sub).
  creating $alu model for $macc $sub$uart.v:95$14.
  creating $alu model for $macc $sub$uart.v:141$28.
  creating $alu model for $macc $add$uart.v:92$10.
  creating $alu model for $macc $add$uart.v:86$5.
  creating $alu model for $macc $add$uart.v:136$23.
  creating $alu model for $gt$uart.v:140$25 ($gt): new $alu
  creating $alu model for $gt$uart.v:94$11 ($gt): new $alu
  creating $alu model for $lt$uart.v:140$26 ($lt): new $alu
  creating $alu model for $lt$uart.v:94$12 ($lt): new $alu
  creating $alu model for $eq$uart.v:143$30 ($eq): merged with $lt$uart.v:140$26.
  creating $alu model for $eq$uart.v:97$15 ($eq): merged with $lt$uart.v:94$12.
  creating $alu cell for $lt$uart.v:94$12, $eq$uart.v:97$15: $auto$alumacc.cc:470:replace_alu$375
  creating $alu cell for $lt$uart.v:140$26, $eq$uart.v:143$30: $auto$alumacc.cc:470:replace_alu$382
  creating $alu cell for $gt$uart.v:94$11: $auto$alumacc.cc:470:replace_alu$389
  creating $alu cell for $gt$uart.v:140$25: $auto$alumacc.cc:470:replace_alu$394
  creating $alu cell for $add$uart.v:136$23: $auto$alumacc.cc:470:replace_alu$399
  creating $alu cell for $add$uart.v:86$5: $auto$alumacc.cc:470:replace_alu$402
  creating $alu cell for $add$uart.v:92$10: $auto$alumacc.cc:470:replace_alu$405
  creating $alu cell for $sub$uart.v:141$28: $auto$alumacc.cc:470:replace_alu$408
  creating $alu cell for $sub$uart.v:95$14: $auto$alumacc.cc:470:replace_alu$411
  created 9 $alu and 0 $macc cells.

3.9. Executing SHARE pass (SAT-based resource sharing).

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$132 (pure)
    Root of a mux tree: $procmux$153 (pure)
    Root of a mux tree: $procmux$175 (pure)
    Root of a mux tree: $procmux$198 (pure)
    Root of a mux tree: $procmux$222 (pure)
    Root of a mux tree: $procmux$247 (pure)
    Root of a mux tree: $procmux$287
    Root of a mux tree: $procmux$298 (pure)
    Root of a mux tree: $procmux$307 (pure)
    Root of a mux tree: $procmux$311
    Root of a mux tree: $procmux$328 (pure)
    Root of a mux tree: $procmux$331
    Root of a mux tree: $procmux$349 (pure)
    Root of a mux tree: $procmux$352 (pure)
    Root of a mux tree: $procmux$39 (pure)
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $procmux$93 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$380: { $auto$alumacc.cc:483:replace_alu$376 [0] $auto$alumacc.cc:483:replace_alu$376 [1] $auto$alumacc.cc:483:replace_alu$376 [2] $auto$alumacc.cc:483:replace_alu$376 [3] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$387: { $auto$alumacc.cc:483:replace_alu$383 [0] $auto$alumacc.cc:483:replace_alu$383 [1] $auto$alumacc.cc:483:replace_alu$383 [2] $auto$alumacc.cc:483:replace_alu$383 [3] }
  Optimizing cells in module \uart.
Performed a total of 2 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

3.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.10.8. Executing OPT_EXPR pass (perform const folding).

3.10.9. Rerunning OPT passes. (Maybe there is more to do..)

3.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$132 (pure)
    Root of a mux tree: $procmux$153 (pure)
    Root of a mux tree: $procmux$175 (pure)
    Root of a mux tree: $procmux$198 (pure)
    Root of a mux tree: $procmux$222 (pure)
    Root of a mux tree: $procmux$247 (pure)
    Root of a mux tree: $procmux$287
    Root of a mux tree: $procmux$298 (pure)
    Root of a mux tree: $procmux$307 (pure)
    Root of a mux tree: $procmux$311
    Root of a mux tree: $procmux$328 (pure)
    Root of a mux tree: $procmux$331
    Root of a mux tree: $procmux$349 (pure)
    Root of a mux tree: $procmux$352 (pure)
    Root of a mux tree: $procmux$39 (pure)
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $procmux$93 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

3.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

3.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.10.15. Executing OPT_EXPR pass (perform const folding).

3.10.16. Finished OPT passes. (There is nothing left to do.)

3.11. Executing FSM pass (extract and optimize FSM).

3.11.1. Executing FSM_DETECT pass (finding FSMs in design).

3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.12. Executing OPT pass (performing simple optimizations).

3.12.1. Executing OPT_EXPR pass (perform const folding).

3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

3.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.12.5. Finished fast OPT passes.

3.13. Executing MEMORY pass.

3.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).
Replacing $mux cell `$procmux$61' in module `uart' with or-gate.
Replacing $mux cell `$procmux$73' in module `uart' with or-gate.
Replacing $mux cell `$procmux$311' in module `uart' with or-gate.
Replacing $mux cell `$procmux$328' in module `uart' with and-gate.
Replacing $mux cell `$procmux$331' in module `uart' with or-gate.

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.17. Executing OPT pass (performing simple optimizations).

3.17.1. Executing OPT_EXPR pass (perform const folding).

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$112 (pure)
    Root of a mux tree: $procmux$132 (pure)
    Root of a mux tree: $procmux$153 (pure)
    Root of a mux tree: $procmux$175 (pure)
    Root of a mux tree: $procmux$198 (pure)
    Root of a mux tree: $procmux$222 (pure)
    Root of a mux tree: $procmux$247 (pure)
    Root of a mux tree: $procmux$287
    Root of a mux tree: $procmux$298 (pure)
    Root of a mux tree: $procmux$307 (pure)
    Root of a mux tree: $procmux$323 (pure)
    Root of a mux tree: $procmux$349 (pure)
    Root of a mux tree: $procmux$352 (pure)
    Root of a mux tree: $procmux$39 (pure)
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57 (pure)
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$70 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $procmux$93 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

3.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

3.17.8. Executing OPT_EXPR pass (perform const folding).

3.17.9. Finished OPT passes. (There is nothing left to do.)

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping uart.$logic_not$uart.v:79$2 ($logic_not) with simplemap.
Mapping uart.$logic_not$uart.v:79$3 ($logic_not) with simplemap.
Mapping uart.$logic_and$uart.v:79$4 ($logic_and) with simplemap.
Mapping uart.$eq$uart.v:88$6 ($eq) with simplemap.
Mapping uart.$eq$uart.v:89$8 ($logic_not) with simplemap.
Mapping uart.$logic_and$uart.v:89$9 ($logic_and) with simplemap.
Mapping uart.$logic_and$uart.v:94$13 ($logic_and) with simplemap.
Mapping uart.$logic_not$uart.v:135$21 ($logic_not) with simplemap.
Mapping uart.$logic_and$uart.v:135$22 ($logic_and) with simplemap.
Mapping uart.$eq$uart.v:137$24 ($logic_not) with simplemap.
Mapping uart.$logic_and$uart.v:140$27 ($logic_and) with simplemap.

3.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 4
Parameter \B_WIDTH = 1
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=32'.

3.18.3. Continuing TECHMAP pass.
Mapping uart.$auto$alumacc.cc:470:replace_alu$408 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=32.

3.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_shift_shiftx'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 1
Parameter \A_WIDTH = 8
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 1
Parameter \_TECHMAP_CELLTYPE_ = 56'00100100011100110110100001101001011001100111010001111000
Generating RTLIL representation for module `$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx'.

3.18.5. Executing PROC pass (convert processes to netlists).

3.18.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 10 empty switches in `$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx.$proc$<techmap.v>:145$530'.
Cleaned up 10 empty switches.

3.18.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.5.3. Executing PROC_INIT pass (extract init attributes).

3.18.5.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.5.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx.$proc$<techmap.v>:145$530'.
     1/47: $2\buffer[23:0]
     2/47: $29\overflow[0:0]
     3/47: $28\overflow[0:0]
     4/47: $27\overflow[0:0]
     5/47: $26\overflow[0:0]
     6/47: $25\overflow[0:0]
     7/47: $24\overflow[0:0]
     8/47: $23\overflow[0:0]
     9/47: $22\overflow[0:0]
    10/47: $21\overflow[0:0]
    11/47: $20\overflow[0:0]
    12/47: $19\overflow[0:0]
    13/47: $18\overflow[0:0]
    14/47: $17\overflow[0:0]
    15/47: $16\overflow[0:0]
    16/47: $15\overflow[0:0]
    17/47: $14\overflow[0:0]
    18/47: $13\overflow[0:0]
    19/47: $12\overflow[0:0]
    20/47: $11\overflow[0:0]
    21/47: $10\overflow[0:0]
    22/47: $9\overflow[0:0]
    23/47: $8\overflow[0:0]
    24/47: $7\overflow[0:0]
    25/47: $6\overflow[0:0]
    26/47: $5\overflow[0:0]
    27/47: $4\overflow[0:0]
    28/47: $3\overflow[0:0]
    29/47: $2\overflow[0:0]
    30/47: $16\buffer[23:0]
    31/47: $15\buffer[23:0]
    32/47: $14\buffer[23:0]
    33/47: $13\buffer[23:0]
    34/47: $12\buffer[23:0]
    35/47: $11\buffer[23:0]
    36/47: $10\buffer[23:0]
    37/47: $9\buffer[23:0]
    38/47: $8\buffer[23:0]
    39/47: $7\buffer[23:0]
    40/47: $6\buffer[23:0]
    41/47: $5\buffer[23:0]
    42/47: $4\buffer[23:0]
    43/47: $3\buffer[23:0]
    44/47: $1\buffer[23:0]
    45/47: $1\overflow[0:0]
    46/47: $0\buffer[23:0]
    47/47: $0\overflow[0:0]

3.18.5.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx.\overflow' from process `$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx.$proc$<techmap.v>:145$530'.
No latch inferred for signal `$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx.\buffer' from process `$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx.$proc$<techmap.v>:145$530'.

3.18.5.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.5.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 34 empty switches in `$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx.$proc$<techmap.v>:145$530'.
Removing empty process `$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx.$proc$<techmap.v>:145$530'.
Cleaned up 34 empty switches.
Removed 0 unused cells and 92 unused wires.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx'.

3.18.6. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$710
    Root of a mux tree: $procmux$704
    Root of a mux tree: $procmux$695
    Root of a mux tree: $procmux$686
      Removing pure flag from root mux $procmux$559.
    Root of a mux tree: $procmux$677 (pure)
      Removing pure flag from root mux $procmux$710.
    Root of a mux tree: $procmux$562 (pure)
    Root of a mux tree: $procmux$559 (pure)
    Root of a mux tree: $procmux$710 (rerun as non-pure)
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$707.
    dead port 2/2 on $mux $procmux$701.
    dead port 2/2 on $mux $procmux$698.
    dead port 2/2 on $mux $procmux$692.
    dead port 2/2 on $mux $procmux$689.
    dead port 2/2 on $mux $procmux$683.
    dead port 2/2 on $mux $procmux$680.
    dead port 2/2 on $mux $procmux$674.
    dead port 2/2 on $mux $procmux$671.
Removed 9 multiplexer ports.

3.18.7. Executing OPT_EXPR pass (perform const folding).
Replacing $mux cell `$procmux$666' (mux_bool) in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with constant driver `$3\overflow[0:0] = $ne$<techmap.v>:153$531_Y'.
Replacing $mux cell `$procmux$559' (mux_empty) in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with constant driver `$1\buffer[23:0] = { 16'xxxxxxxxxxxxxxxx $auto$techmap.cc:737:techmap_module$713 }'.
Replacing $mux cell `$procmux$662' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$658' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$654' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$650' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$646' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$642' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$638' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$634' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$630' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$626' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$622' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$618' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$614' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$610' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$606' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$602' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$598' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$594' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$590' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$586' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$582' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$578' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$574' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$570' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$566' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Replacing $mux cell `$procmux$562' in module `$paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx' with or-gate.
Removed 53 unused cells and 64 unused wires.

3.18.8. Continuing TECHMAP pass.
Mapping uart.$shiftx$uart.v:141$29 using $paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx.
Mapping uart.$procmux$34 ($mux) with simplemap.
Mapping uart.$procmux$36 ($mux) with simplemap.
Mapping uart.$procmux$39 ($mux) with simplemap.
Mapping uart.$procmux$49 ($mux) with simplemap.
Mapping uart.$procmux$51 ($mux) with simplemap.
Mapping uart.$procmux$57 ($mux) with simplemap.
Mapping uart.$procmux$61 ($or) with simplemap.
Mapping uart.$procmux$63 ($mux) with simplemap.
Mapping uart.$procmux$67 ($mux) with simplemap.
Mapping uart.$procmux$70 ($mux) with simplemap.
Mapping uart.$procmux$73 ($or) with simplemap.
Mapping uart.$procmux$75 ($mux) with simplemap.
Mapping uart.$procmux$83_CMP0 ($eq) with simplemap.
Mapping uart.$procmux$82 ($mux) with simplemap.
Mapping uart.$procmux$84 ($mux) with simplemap.
Mapping uart.$procmux$87 ($mux) with simplemap.
Mapping uart.$procmux$89 ($mux) with simplemap.
Mapping uart.$procmux$91 ($mux) with simplemap.
Mapping uart.$procmux$93 ($mux) with simplemap.
Mapping uart.$procmux$102_CMP0 ($eq) with simplemap.
Mapping uart.$procmux$101 ($mux) with simplemap.
Mapping uart.$procmux$103 ($mux) with simplemap.
Mapping uart.$procmux$106 ($mux) with simplemap.
Mapping uart.$procmux$108 ($mux) with simplemap.
Mapping uart.$procmux$110 ($mux) with simplemap.
Mapping uart.$procmux$112 ($mux) with simplemap.
Mapping uart.$procmux$122_CMP0 ($eq) with simplemap.
Mapping uart.$procmux$121 ($mux) with simplemap.
Mapping uart.$procmux$123 ($mux) with simplemap.
Mapping uart.$procmux$126 ($mux) with simplemap.
Mapping uart.$procmux$128 ($mux) with simplemap.
Mapping uart.$procmux$130 ($mux) with simplemap.
Mapping uart.$procmux$132 ($mux) with simplemap.
Mapping uart.$procmux$143_CMP0 ($eq) with simplemap.
Mapping uart.$procmux$142 ($mux) with simplemap.
Mapping uart.$procmux$144 ($mux) with simplemap.
Mapping uart.$procmux$147 ($mux) with simplemap.
Mapping uart.$procmux$149 ($mux) with simplemap.
Mapping uart.$procmux$151 ($mux) with simplemap.
Mapping uart.$procmux$153 ($mux) with simplemap.
Mapping uart.$procmux$165_CMP0 ($eq) with simplemap.
Mapping uart.$procmux$164 ($mux) with simplemap.
Mapping uart.$procmux$166 ($mux) with simplemap.
Mapping uart.$procmux$169 ($mux) with simplemap.
Mapping uart.$procmux$171 ($mux) with simplemap.
Mapping uart.$procmux$173 ($mux) with simplemap.
Mapping uart.$procmux$175 ($mux) with simplemap.
Mapping uart.$procmux$188_CMP0 ($eq) with simplemap.
Mapping uart.$procmux$187 ($mux) with simplemap.
Mapping uart.$procmux$189 ($mux) with simplemap.
Mapping uart.$procmux$192 ($mux) with simplemap.
Mapping uart.$procmux$194 ($mux) with simplemap.
Mapping uart.$procmux$196 ($mux) with simplemap.
Mapping uart.$procmux$198 ($mux) with simplemap.
Mapping uart.$procmux$212_CMP0 ($eq) with simplemap.
Mapping uart.$procmux$211 ($mux) with simplemap.
Mapping uart.$procmux$213 ($mux) with simplemap.
Mapping uart.$procmux$216 ($mux) with simplemap.
Mapping uart.$procmux$218 ($mux) with simplemap.
Mapping uart.$procmux$220 ($mux) with simplemap.
Mapping uart.$procmux$222 ($mux) with simplemap.
Mapping uart.$procmux$237_CMP0 ($logic_not) with simplemap.
Mapping uart.$procmux$236 ($mux) with simplemap.
Mapping uart.$procmux$238 ($mux) with simplemap.
Mapping uart.$procmux$241 ($mux) with simplemap.
Mapping uart.$procmux$243 ($mux) with simplemap.
Mapping uart.$procmux$245 ($mux) with simplemap.
Mapping uart.$procmux$247 ($mux) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$411 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=32.

3.18.9. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 4
Parameter \Y_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4'.

3.18.10. Continuing TECHMAP pass.
Mapping uart.$auto$alumacc.cc:470:replace_alu$405 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4.
Mapping uart.$auto$alumacc.cc:470:replace_alu$402 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4.
Mapping uart.$procmux$287 ($mux) with simplemap.
Mapping uart.$procmux$292 ($mux) with simplemap.
Mapping uart.$procmux$294 ($mux) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$399 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4.
Mapping uart.$procmux$296 ($mux) with simplemap.
Mapping uart.$auto$alumacc.cc:78:get_cf$397 ($not) with simplemap.
Mapping uart.$procmux$298 ($mux) with simplemap.
Mapping uart.$procmux$302 ($mux) with simplemap.
Mapping uart.$procmux$305 ($mux) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$394 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4.
Mapping uart.$procmux$307 ($mux) with simplemap.
Mapping uart.$auto$alumacc.cc:78:get_cf$392 ($not) with simplemap.
Mapping uart.$procmux$311 ($or) with simplemap.
Mapping uart.$procmux$316 ($mux) with simplemap.
Mapping uart.$procmux$319 ($mux) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$389 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4.
Mapping uart.$procmux$321 ($mux) with simplemap.
Mapping uart.$procmux$323 ($mux) with simplemap.
Mapping uart.$auto$alumacc.cc:64:get_eq$387 ($reduce_and) with simplemap.
Mapping uart.$auto$alumacc.cc:78:get_cf$385 ($not) with simplemap.
Mapping uart.$procmux$328 ($and) with simplemap.
Mapping uart.$procmux$331 ($or) with simplemap.
Mapping uart.$procmux$338 ($mux) with simplemap.
Mapping uart.$procmux$340 ($mux) with simplemap.
Mapping uart.$auto$alumacc.cc:64:get_eq$380 ($reduce_and) with simplemap.
Mapping uart.$procmux$343 ($mux) with simplemap.
Mapping uart.$procmux$345 ($mux) with simplemap.
Mapping uart.$auto$alumacc.cc:78:get_cf$378 ($not) with simplemap.
Mapping uart.$procmux$347 ($mux) with simplemap.
Mapping uart.$procmux$349 ($mux) with simplemap.

3.18.11. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 4
Parameter \B_WIDTH = 4
Parameter \Y_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4'.

3.18.12. Continuing TECHMAP pass.
Mapping uart.$auto$alumacc.cc:470:replace_alu$375 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4.
Mapping uart.$procmux$352 ($mux) with simplemap.
Mapping uart.$procdff$354 ($adff) with simplemap.
Mapping uart.$procdff$355 ($adff) with simplemap.
Mapping uart.$procdff$356 ($adff) with simplemap.
Mapping uart.$procdff$358 ($adff) with simplemap.
Mapping uart.$procdff$359 ($adff) with simplemap.
Mapping uart.$procdff$360 ($adff) with simplemap.
Mapping uart.$procdff$361 ($adff) with simplemap.
Mapping uart.$procdff$362 ($adff) with simplemap.
Mapping uart.$procdff$363 ($adff) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$382 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4.
Mapping uart.$procdff$366 ($adff) with simplemap.
Mapping uart.$procdff$367 ($adff) with simplemap.
Mapping uart.$procdff$368 ($adff) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495 ($and) with simplemap.

3.18.13. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=32'.

3.18.14. Executing PROC pass (convert processes to netlists).

3.18.14.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.14.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.14.3. Executing PROC_INIT pass (extract init attributes).

3.18.14.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.14.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$1635'.
     1/64: $0\p[31:0] [30]
     2/64: $0\g[31:0] [30]
     3/64: $0\p[31:0] [28]
     4/64: $0\g[31:0] [28]
     5/64: $0\p[31:0] [26]
     6/64: $0\g[31:0] [26]
     7/64: $0\p[31:0] [24]
     8/64: $0\g[31:0] [24]
     9/64: $0\p[31:0] [22]
    10/64: $0\g[31:0] [22]
    11/64: $0\p[31:0] [20]
    12/64: $0\g[31:0] [20]
    13/64: $0\p[31:0] [18]
    14/64: $0\g[31:0] [18]
    15/64: $0\p[31:0] [16]
    16/64: $0\g[31:0] [16]
    17/64: $0\p[31:0] [14]
    18/64: $0\g[31:0] [14]
    19/64: $0\p[31:0] [12]
    20/64: $0\g[31:0] [12]
    21/64: $0\p[31:0] [10]
    22/64: $0\g[31:0] [10]
    23/64: $0\p[31:0] [8]
    24/64: $0\g[31:0] [8]
    25/64: $0\p[31:0] [6]
    26/64: $0\g[31:0] [6]
    27/64: $0\p[31:0] [4]
    28/64: $0\g[31:0] [4]
    29/64: $0\p[31:0] [2]
    30/64: $0\g[31:0] [2]
    31/64: $0\p[31:0] [29]
    32/64: $0\g[31:0] [29]
    33/64: $0\p[31:0] [25]
    34/64: $0\g[31:0] [25]
    35/64: $0\p[31:0] [21]
    36/64: $0\g[31:0] [21]
    37/64: $0\p[31:0] [17]
    38/64: $0\g[31:0] [17]
    39/64: $0\p[31:0] [13]
    40/64: $0\g[31:0] [13]
    41/64: $0\p[31:0] [9]
    42/64: $0\g[31:0] [9]
    43/64: $0\p[31:0] [5]
    44/64: $0\g[31:0] [5]
    45/64: $0\p[31:0] [27]
    46/64: $0\g[31:0] [27]
    47/64: $0\p[31:0] [19]
    48/64: $0\g[31:0] [19]
    49/64: $0\p[31:0] [11]
    50/64: $0\g[31:0] [11]
    51/64: $0\p[31:0] [23]
    52/64: $0\g[31:0] [23]
    53/64: $0\p[31:0] [31]
    54/64: $0\g[31:0] [31]
    55/64: $0\p[31:0] [15]
    56/64: $0\g[31:0] [15]
    57/64: $0\p[31:0] [7]
    58/64: $0\g[31:0] [7]
    59/64: $0\p[31:0] [3]
    60/64: $0\g[31:0] [3]
    61/64: $0\p[31:0] [1]
    62/64: $0\g[31:0] [1]
    63/64: $0\g[31:0] [0]
    64/64: $0\p[31:0] [0]

3.18.14.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=32.\g' from process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$1635'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=32.\p' from process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$1635'.

3.18.14.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.14.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$1635'.
Cleaned up 0 empty switches.

3.18.15. Executing OPT pass (performing simple optimizations).

3.18.15.1. Executing OPT_EXPR pass (perform const folding).

3.18.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=32'.
Removed a total of 0 cells.

3.18.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=32..
  removing unused `$and' cell `$and$<techmap.v>:222$1640'.
  removing unused `$and' cell `$and$<techmap.v>:222$1688'.
  removing unused `$and' cell `$and$<techmap.v>:222$1712'.
  removing unused `$and' cell `$and$<techmap.v>:222$1724'.
  removing unused `$and' cell `$and$<techmap.v>:222$1730'.
  removing unused `$and' cell `$and$<techmap.v>:230$1733'.
  removing unused `$and' cell `$and$<techmap.v>:230$1736'.
  removing unused `$and' cell `$and$<techmap.v>:230$1739'.
  removing unused `$and' cell `$and$<techmap.v>:230$1742'.
  removing unused `$and' cell `$and$<techmap.v>:230$1745'.
  removing unused `$and' cell `$and$<techmap.v>:230$1748'.
  removing unused `$and' cell `$and$<techmap.v>:230$1751'.
  removing unused `$and' cell `$and$<techmap.v>:230$1754'.
  removing unused `$and' cell `$and$<techmap.v>:230$1757'.
  removing unused `$and' cell `$and$<techmap.v>:230$1760'.
  removing unused `$and' cell `$and$<techmap.v>:230$1763'.
  removing unused `$and' cell `$and$<techmap.v>:230$1766'.
  removing unused `$and' cell `$and$<techmap.v>:230$1769'.
  removing unused `$and' cell `$and$<techmap.v>:230$1772'.
  removing unused `$and' cell `$and$<techmap.v>:230$1775'.
  removing unused `$and' cell `$and$<techmap.v>:230$1778'.
  removing unused `$and' cell `$and$<techmap.v>:230$1781'.
  removing unused `$and' cell `$and$<techmap.v>:230$1784'.
  removing unused `$and' cell `$and$<techmap.v>:230$1787'.
  removing unused `$and' cell `$and$<techmap.v>:230$1790'.
  removing unused `$and' cell `$and$<techmap.v>:230$1793'.
  removing unused `$and' cell `$and$<techmap.v>:230$1796'.
  removing unused `$and' cell `$and$<techmap.v>:230$1799'.
  removing unused `$and' cell `$and$<techmap.v>:230$1802'.
  removing unused `$and' cell `$and$<techmap.v>:230$1805'.
  removing unused `$and' cell `$and$<techmap.v>:230$1808'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

3.18.15.5. Finished fast OPT passes.

3.18.16. Continuing TECHMAP pass.
Mapping uart.$auto$alumacc.cc:470:replace_alu$408.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494 ($mux) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493 ($not) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$408.B_conv ($pos) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$408.A_conv ($pos) with simplemap.
Mapping uart.$techmap$shiftx$uart.v:141$29.$procmux$704 ($mux) with simplemap.
Mapping uart.$techmap$shiftx$uart.v:141$29.$procmux$710 ($mux) with simplemap.
Mapping uart.$techmap$shiftx$uart.v:141$29.$procmux$686 ($mux) with simplemap.
Mapping uart.$techmap$shiftx$uart.v:141$29.$procmux$695 ($mux) with simplemap.
Mapping uart.$techmap$shiftx$uart.v:141$29.$procmux$677 ($mux) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493 ($not) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494 ($mux) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497 ($xor) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$411.A_conv ($pos) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$411.B_conv ($pos) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$411.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.$xor$<techmap.v>:263$1356 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.$xor$<techmap.v>:262$1355 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.$and$<techmap.v>:260$1354 ($and) with simplemap.

3.18.17. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=4'.

3.18.18. Executing PROC pass (convert processes to netlists).

3.18.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.18.3. Executing PROC_INIT pass (extract init attributes).

3.18.18.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.18.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$2175'.
     1/8: $0\p[3:0] [2]
     2/8: $0\g[3:0] [2]
     3/8: $0\p[3:0] [3]
     4/8: $0\g[3:0] [3]
     5/8: $0\p[3:0] [1]
     6/8: $0\g[3:0] [1]
     7/8: $0\g[3:0] [0]
     8/8: $0\p[3:0] [0]

3.18.18.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=4.\g' from process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$2175'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=4.\p' from process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$2175'.

3.18.18.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.18.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=4.$proc$<techmap.v>:207$2175'.
Cleaned up 0 empty switches.

3.18.19. Executing OPT pass (performing simple optimizations).

3.18.19.1. Executing OPT_EXPR pass (perform const folding).

3.18.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=4'.
Removed a total of 0 cells.

3.18.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=4..
  removing unused `$and' cell `$and$<techmap.v>:222$2180'.
  removing unused `$and' cell `$and$<techmap.v>:222$2186'.
  removing unused `$and' cell `$and$<techmap.v>:230$2189'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

3.18.19.5. Finished fast OPT passes.

3.18.20. Continuing TECHMAP pass.
Mapping uart.$auto$alumacc.cc:470:replace_alu$405.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.$ternary$<techmap.v>:258$1353 ($mux) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.$not$<techmap.v>:258$1352 ($not) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$405.B_conv ($pos) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$405.A_conv ($pos) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.$xor$<techmap.v>:263$1356 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.$xor$<techmap.v>:262$1355 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.$and$<techmap.v>:260$1354 ($and) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$402.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.$ternary$<techmap.v>:258$1353 ($mux) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.$not$<techmap.v>:258$1352 ($not) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$402.B_conv ($pos) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$402.A_conv ($pos) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.$xor$<techmap.v>:263$1356 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.$xor$<techmap.v>:262$1355 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.$and$<techmap.v>:260$1354 ($and) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$399.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.$ternary$<techmap.v>:258$1353 ($mux) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.$not$<techmap.v>:258$1352 ($not) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$399.B_conv ($pos) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$399.A_conv ($pos) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.$xor$<techmap.v>:263$1356 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.$xor$<techmap.v>:262$1355 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.$and$<techmap.v>:260$1354 ($and) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$394.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.$ternary$<techmap.v>:258$1353 ($mux) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352 ($not) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$394.B_conv ($pos) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$394.A_conv ($pos) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.$xor$<techmap.v>:263$1356 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.$xor$<techmap.v>:262$1355 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.$and$<techmap.v>:260$1354 ($and) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$389.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.$ternary$<techmap.v>:258$1353 ($mux) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352 ($not) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$389.B_conv ($pos) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$389.A_conv ($pos) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:263$1420 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:262$1419 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.$and$<techmap.v>:260$1418 ($and) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$375.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.$ternary$<techmap.v>:258$1417 ($mux) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.$not$<techmap.v>:258$1416 ($not) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$375.B_conv ($pos) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$375.A_conv ($pos) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:263$1420 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:262$1419 ($xor) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.$and$<techmap.v>:260$1418 ($and) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$382.lcu using $paramod\_90_lcu\WIDTH=4.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.$ternary$<techmap.v>:258$1417 ($mux) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.$not$<techmap.v>:258$1416 ($not) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$382.B_conv ($pos) with simplemap.
Mapping uart.$auto$alumacc.cc:470:replace_alu$382.A_conv ($pos) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1666 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1663 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1660 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1657 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1654 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1651 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1648 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1645 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1642 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1639 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:212$1637 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1806 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1803 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1800 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1797 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1794 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1791 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1788 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1785 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1782 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1779 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1776 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1773 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1770 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1767 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1764 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1761 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1758 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1755 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1752 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1749 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1746 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1743 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1740 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1737 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1734 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1731 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1727 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1721 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1718 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1715 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1709 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1706 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1703 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1700 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1697 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1694 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1691 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1685 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1682 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1679 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1676 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1673 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1670 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1667 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1664 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1661 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1658 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1655 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1652 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1649 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1646 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1643 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1728 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1725 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1722 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1719 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1716 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1713 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1710 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1707 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1704 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1701 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1698 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1695 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1692 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1689 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1686 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1683 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1680 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1677 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1674 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1671 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1668 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1665 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1662 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1659 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1656 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1653 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1650 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1647 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1644 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1641 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1638 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:212$1636 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$or$<techmap.v>:229$2188 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$or$<techmap.v>:221$2185 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$or$<techmap.v>:221$2182 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$or$<techmap.v>:221$2179 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$or$<techmap.v>:212$2177 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:229$2187 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:222$2183 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:221$2184 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:221$2181 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:221$2178 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:212$2176 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1669 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1672 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1675 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1678 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1681 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1684 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1687 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1690 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1693 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1696 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1699 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1702 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1705 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1708 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1711 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1714 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1717 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1720 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1723 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1726 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1729 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1732 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1735 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1738 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1741 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1744 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1747 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1750 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1753 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1756 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1759 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1762 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1765 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1768 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1771 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1774 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1777 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1780 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1783 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1786 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1789 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1792 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1795 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1798 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1801 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1804 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:229$1807 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:212$1636 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1638 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1641 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1644 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1647 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1650 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1653 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1656 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1659 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1662 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1665 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1668 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1671 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1674 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1677 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1680 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1683 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1686 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1689 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1692 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1695 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1698 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1701 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1704 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1707 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1710 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1713 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1716 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1719 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1722 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1725 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1728 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1643 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1646 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1649 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1652 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1655 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1658 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1661 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1664 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1667 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1670 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1673 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1676 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1679 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1682 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1685 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1691 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1694 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1697 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1700 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1703 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1706 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1709 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1715 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1718 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1721 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1727 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1731 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1734 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1737 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1740 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1743 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1746 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1749 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1752 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1755 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1758 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1761 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1764 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1767 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1770 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1773 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1776 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1779 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1782 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1785 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1788 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1791 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1794 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1797 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1800 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1803 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1806 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:212$1637 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1639 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1642 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1645 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1648 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1651 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1654 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1657 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1660 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1663 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1666 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1669 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1672 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1675 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1678 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1681 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1684 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1687 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1690 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1693 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1696 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1699 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1702 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1705 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1708 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1711 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1714 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1717 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1720 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1723 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1726 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1729 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1732 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1735 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1738 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1741 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1744 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1747 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1750 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1753 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1756 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1759 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1762 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1765 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1768 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1771 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1774 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1777 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1780 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1783 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1786 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1789 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1792 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1795 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1798 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1801 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1804 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:229$1807 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:212$2176 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:221$2178 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:221$2181 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:221$2184 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:222$2183 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:229$2187 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$or$<techmap.v>:212$2177 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$or$<techmap.v>:221$2179 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$or$<techmap.v>:221$2182 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$or$<techmap.v>:221$2185 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$or$<techmap.v>:229$2188 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:212$2176 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:221$2178 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:221$2181 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:221$2184 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:222$2183 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:229$2187 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$or$<techmap.v>:212$2177 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$or$<techmap.v>:221$2179 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$or$<techmap.v>:221$2182 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$or$<techmap.v>:221$2185 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$or$<techmap.v>:229$2188 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:212$2176 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:221$2178 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:221$2181 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:221$2184 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:222$2183 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:229$2187 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$or$<techmap.v>:212$2177 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$or$<techmap.v>:221$2179 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$or$<techmap.v>:221$2182 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$or$<techmap.v>:221$2185 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$or$<techmap.v>:229$2188 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:212$2176 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:221$2178 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:221$2181 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:221$2184 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:222$2183 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:229$2187 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$or$<techmap.v>:212$2177 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$or$<techmap.v>:221$2179 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$or$<techmap.v>:221$2182 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$or$<techmap.v>:221$2185 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$or$<techmap.v>:229$2188 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:212$2176 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:221$2178 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:221$2181 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:221$2184 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:222$2183 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:229$2187 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$or$<techmap.v>:212$2177 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$or$<techmap.v>:221$2179 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$or$<techmap.v>:221$2182 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$or$<techmap.v>:221$2185 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$or$<techmap.v>:229$2188 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:212$2176 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:221$2178 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:221$2181 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:221$2184 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:222$2183 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:229$2187 ($and) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$or$<techmap.v>:212$2177 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$or$<techmap.v>:221$2179 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$or$<techmap.v>:221$2182 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$or$<techmap.v>:221$2185 ($or) with simplemap.
Mapping uart.$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$or$<techmap.v>:229$2188 ($or) with simplemap.
No more expansions possible.

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2045' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2077' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [20] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2109' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [20] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2041' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2073' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [16] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2105' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [16] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2042' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2074' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [17] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2106' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [17] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2516' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1664_Y = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2043' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2075' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [18] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2107' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [18] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2044' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2076' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [19] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2108' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [19] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2517' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1667_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2527' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1700_Y = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2033' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2065' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [8] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2097' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [8] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2034' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2066' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [9] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2098' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2512' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1652_Y = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2035' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2067' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [10] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2099' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [10] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2036' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2068' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [11] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2100' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [11] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2513' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1655_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2525' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1694_Y = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2037' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2069' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [12] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2101' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [12] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2038' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2070' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [13] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2102' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [13] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2514' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1658_Y = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2039' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2071' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [14] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2103' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [14] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2040' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2072' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [15] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2104' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [15] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2515' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1661_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2526' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1697_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2531' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1715_Y = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2029' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2061' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [4] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2093' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [4] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2030' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2062' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [5] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2094' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [5] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2510' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1646_Y = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2031' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2063' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [6] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2095' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [6] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2032' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2064' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [7] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2096' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [7] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2511' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1649_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2524' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1691_Y = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2027' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2059' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [2] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2028' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2060' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [3] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2026' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2058' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [1] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1994' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [1] = \rx_cnt [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2025' (1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2057' (101) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1993' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2089' (?0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [0] = \rx_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2477' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:212$1636_Y = \rx_cnt [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2561' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [0] = \rx_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1996' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [3] = \rx_cnt [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1995' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [2] = \rx_cnt [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2502' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1710_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1998' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1997' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2480' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1644_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2564' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1645_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2495' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1689_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2000' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1999' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2481' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1647_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2565' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1648_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2579' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1690_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2586' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [7] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2506' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1722_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2002' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2001' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2482' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1650_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2566' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1651_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2496' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1692_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2004' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2003' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2483' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1653_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2567' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1654_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2580' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1693_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2503' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1713_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2006' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2005' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2484' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1656_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2568' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1657_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2497' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1695_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2008' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2007' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2485' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1659_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2569' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1660_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2581' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1696_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2587' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1714_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2590' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [15] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2537' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1737_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2010' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2009' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2486' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1662_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2570' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1663_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2498' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1698_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2012' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2011' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2487' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1665_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2571' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1666_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2582' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1699_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2595' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [19] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$771' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [20] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [20]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2046' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2078' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [21] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2110' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [21] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2013' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2555' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1791_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2613' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [20] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$772' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [21] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [21]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2542' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1752_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2600' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [17] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$769' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [18] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [18]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2554' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1788_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2612' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [18] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$770' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [19] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$767' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [16] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2553' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1785_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2611' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [16] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$768' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [17] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [17]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2536' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1734_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2594' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [11] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2541' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1749_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2599' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [13] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$765' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [14] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2552' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1782_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2610' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [14] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$766' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [15] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$763' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [12] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2551' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1779_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2609' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [12] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$764' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [13] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2540' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1746_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2598' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [9] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$761' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [10] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2550' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1776_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2608' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [10] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$762' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [11] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$759' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [8] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2549' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1773_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2607' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [8] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$760' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [9] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2539' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1743_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2597' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [5] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$757' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [6] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2548' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1770_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2606' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [6] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$758' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [7] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$755' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [4] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2547' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1767_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2605' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [4] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$756' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [5] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$754' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [3] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1841' (1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1809' (101) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [0] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1842' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1810' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [1] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1843' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1811' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [2] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1471' (?0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [0] = \tx_cnt [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1844' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1812' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [3] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$466' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$461 [3] = \rx_sample_cnt [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2276' (??1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$ternary$<techmap.v>:258$1353_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2268' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$xor$<techmap.v>:262$1355_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2277' (??1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$ternary$<techmap.v>:258$1353_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2269' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$xor$<techmap.v>:262$1355_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2275' (??1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$ternary$<techmap.v>:258$1353_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2271' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$and$<techmap.v>:260$1354_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2267' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$xor$<techmap.v>:262$1355_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2274' (??1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$ternary$<techmap.v>:258$1353_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2270' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$and$<techmap.v>:260$1354_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2266' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$xor$<techmap.v>:262$1355_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2652' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:212$2176_Y = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2658' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$391 [0] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2659' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$391 [1] = $techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:221$2178_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2273' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$and$<techmap.v>:260$1354_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2272' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$and$<techmap.v>:260$1354_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2654' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:221$2181_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2660' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$or$<techmap.v>:221$2182_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2661' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$391 [3] = $techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:221$2184_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2301' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$not$<techmap.v>:258$1416_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2297' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$ternary$<techmap.v>:258$1417_Y [2] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2302' (1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$not$<techmap.v>:258$1416_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2298' (101) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$ternary$<techmap.v>:258$1417_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2290' (?0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:262$1419_Y [3] = \rx_cnt [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2300' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$not$<techmap.v>:258$1416_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2296' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$ternary$<techmap.v>:258$1417_Y [1] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2292' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$and$<techmap.v>:260$1418_Y [1] = \rx_cnt [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2299' (1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$not$<techmap.v>:258$1416_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2295' (101) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$ternary$<techmap.v>:258$1417_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2291' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$and$<techmap.v>:260$1418_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2287' (?0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:262$1419_Y [0] = \rx_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2663' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:212$2176_Y = \rx_cnt [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2669' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$377 [0] = \rx_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2294' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$and$<techmap.v>:260$1418_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2293' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$and$<techmap.v>:260$1418_Y [2] = \rx_cnt [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2671' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$or$<techmap.v>:221$2182_Y = $techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:221$2181_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2255' (??1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$ternary$<techmap.v>:258$1353_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2247' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$xor$<techmap.v>:262$1355_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2256' (??1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$ternary$<techmap.v>:258$1353_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2248' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$xor$<techmap.v>:262$1355_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2254' (??1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$ternary$<techmap.v>:258$1353_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2250' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$and$<techmap.v>:260$1354_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2246' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$xor$<techmap.v>:262$1355_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2253' (??1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$ternary$<techmap.v>:258$1353_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2249' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$and$<techmap.v>:260$1354_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2245' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$xor$<techmap.v>:262$1355_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2641' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:212$2176_Y = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2647' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$396 [0] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2648' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$396 [1] = $techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:221$2178_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2252' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$and$<techmap.v>:260$1354_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2251' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$and$<techmap.v>:260$1354_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2643' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:221$2181_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2649' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$or$<techmap.v>:221$2182_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2650' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$396 [3] = $techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:221$2184_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2322' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$not$<techmap.v>:258$1416_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2318' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$ternary$<techmap.v>:258$1417_Y [2] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2323' (1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$not$<techmap.v>:258$1416_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2319' (101) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$ternary$<techmap.v>:258$1417_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2311' (?0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:262$1419_Y [3] = \tx_cnt [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2321' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$not$<techmap.v>:258$1416_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2317' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$ternary$<techmap.v>:258$1417_Y [1] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2313' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$and$<techmap.v>:260$1418_Y [1] = \tx_cnt [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2320' (1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$not$<techmap.v>:258$1416_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2316' (101) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$ternary$<techmap.v>:258$1417_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2312' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$and$<techmap.v>:260$1418_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2308' (?0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:262$1419_Y [0] = \tx_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2674' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:212$2176_Y = \tx_cnt [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2680' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$384 [0] = \tx_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2315' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$and$<techmap.v>:260$1418_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2314' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$and$<techmap.v>:260$1418_Y [2] = \tx_cnt [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2682' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$or$<techmap.v>:221$2182_Y = $techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:221$2181_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2047' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2079' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [22] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2111' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [22] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2518' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1670_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2543' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1755_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2014' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2488' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1668_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2572' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1669_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2601' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [21] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$773' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [22] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [22]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2048' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2080' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [23] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2112' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [23] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2015' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2556' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1794_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2614' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [22] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$774' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [23] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [23]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2049' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2081' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [24] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2113' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [24] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2519' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1673_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2528' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1703_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2532' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1718_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2535' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1731_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2504' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1716_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2499' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1701_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2016' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2489' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1671_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2573' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1672_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2583' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1702_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2588' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1717_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2593' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [23] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$775' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [24] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [24]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2050' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2082' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [25] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2114' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [25] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2017' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2557' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1797_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2615' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [24] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$776' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [25] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [25]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2051' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2083' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [26] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2115' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [26] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2520' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1676_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2544' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1758_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2018' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2490' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1674_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2574' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1675_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2602' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [25] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$777' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [26] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [26]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2052' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2084' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [27] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2116' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [27] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2019' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2558' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1800_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2616' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [26] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$778' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [27] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [27]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2054' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2086' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [29] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2118' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [29] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2053' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2085' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [28] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2021' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [28] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2117' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [28] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2521' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1679_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2529' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1706_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2538' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1740_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2500' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1704_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2020' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2491' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1677_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2575' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1678_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2584' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1705_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2596' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [27] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2559' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1803_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2617' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [28] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$780' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [29] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$779' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [28] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [28]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2056' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2088' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [31] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2120' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [31] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2055' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$not$<techmap.v>:258$493_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2087' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$ternary$<techmap.v>:258$494_Y [30] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2023' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [30] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2119' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [30] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2522' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1682_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2545' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1761_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2022' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2492' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1680_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2576' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1681_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2603' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [29] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2560' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1806_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2618' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [30] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$782' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [31] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [31]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$781' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$749 [30] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [30]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$823' in module `uart'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2211' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$ternary$<techmap.v>:258$1353_Y [0] = \rx_sample_cnt [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2198' (?0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$xor$<techmap.v>:263$1356_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$402.$xor$<techmap.v>:262$1355_Y [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$745' in module `uart'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1536' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2418' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:212$1636_Y = \tx_cnt [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2334' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [0] = \tx_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1537' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [1] = \tx_cnt [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1538' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [2] = \tx_cnt [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1845' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1813' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [4] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1475' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [4] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1539' (?1) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [3] = \tx_cnt [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1905' (xx?) in module `\uart' with constant driver `$techmap$shiftx$uart.v:141$29.$3\buffer[23:0] [8] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1909' (xx?) in module `\uart' with constant driver `$techmap$shiftx$uart.v:141$29.$3\buffer[23:0] [12] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1907' (xx?) in module `\uart' with constant driver `$techmap$shiftx$uart.v:141$29.$3\buffer[23:0] [10] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1911' (xx?) in module `\uart' with constant driver `$techmap$shiftx$uart.v:141$29.$3\buffer[23:0] [14] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1906' (xx?) in module `\uart' with constant driver `$techmap$shiftx$uart.v:141$29.$3\buffer[23:0] [9] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1910' (xx?) in module `\uart' with constant driver `$techmap$shiftx$uart.v:141$29.$3\buffer[23:0] [13] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1908' (xx?) in module `\uart' with constant driver `$techmap$shiftx$uart.v:141$29.$3\buffer[23:0] [11] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1912' (xx?) in module `\uart' with constant driver `$techmap$shiftx$uart.v:141$29.$3\buffer[23:0] [15] = 1'x'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2235' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$ternary$<techmap.v>:258$1353_Y [3] = \tx_cnt [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2227' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$xor$<techmap.v>:262$1355_Y [3] = \tx_cnt [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2234' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$ternary$<techmap.v>:258$1353_Y [2] = \tx_cnt [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2230' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$and$<techmap.v>:260$1354_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2226' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$xor$<techmap.v>:262$1355_Y [2] = \tx_cnt [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2233' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$ternary$<techmap.v>:258$1353_Y [1] = \tx_cnt [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2229' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$and$<techmap.v>:260$1354_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2225' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$xor$<techmap.v>:262$1355_Y [1] = \tx_cnt [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2232' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$ternary$<techmap.v>:258$1353_Y [0] = \tx_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2228' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$and$<techmap.v>:260$1354_Y [0] = \tx_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2630' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:212$2176_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2636' (?0) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$401 [0] = \tx_cnt [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2637' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$401 [1] = $techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:221$2178_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2640' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$401 [2] = $techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:229$2187_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2219' (?0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$xor$<techmap.v>:263$1356_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$399.$xor$<techmap.v>:262$1355_Y [0]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$826' in module `uart'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$831' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [0] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$834' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [3] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$835' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [4] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$836' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [5] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$837' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [6] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$838' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [7] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$839' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [8] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$840' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [9] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$841' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [10] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$842' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [11] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$843' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [12] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$844' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [13] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$845' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [14] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$846' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [15] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$847' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [16] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$848' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [17] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$849' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [18] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$850' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [19] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$851' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [20] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$852' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [21] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$853' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [22] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$854' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [23] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$855' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [24] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$856' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [25] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$857' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [26] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$858' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [27] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$859' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [28] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$860' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [29] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$861' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [30] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$862' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$829 [31] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [31]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$903' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$906' in module `uart'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$912' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [1] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$914' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [3] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$915' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [4] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$916' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [5] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$917' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [6] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$918' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [7] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$919' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [8] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$920' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [9] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$921' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [10] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$922' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [11] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$923' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [12] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$924' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [13] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$925' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [14] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$926' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [15] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$927' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [16] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$928' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [17] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$929' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [18] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$930' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [19] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$931' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [20] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$932' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [21] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$933' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [22] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$934' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [23] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$935' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [24] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$936' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [25] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$937' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [26] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$938' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [27] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$939' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [28] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$940' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [29] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$941' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [30] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$942' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$909 [31] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [31]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$983' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$986' in module `uart'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$991' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [0] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$992' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [1] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$994' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [3] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$995' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [4] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$996' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [5] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$997' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [6] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$998' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [7] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$999' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [8] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1000' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [9] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1001' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [10] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1002' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [11] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1003' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [12] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1004' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [13] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1005' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [14] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1006' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [15] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1007' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [16] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1008' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [17] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1009' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [18] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1010' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [19] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1011' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [20] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1012' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [21] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1013' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [22] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1014' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [23] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1015' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [24] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1016' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [25] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1017' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [26] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1018' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [27] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1019' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [28] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1020' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [29] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1021' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [30] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1022' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$989 [31] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [31]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1063' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1066' in module `uart'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1073' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [2] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1074' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [3] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1075' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [4] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1076' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [5] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1077' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [6] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1078' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [7] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1079' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [8] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1080' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [9] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1081' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [10] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1082' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [11] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1083' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [12] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1084' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [13] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1085' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [14] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1086' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [15] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1087' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [16] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1088' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [17] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1089' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [18] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1090' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [19] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1091' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [20] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1092' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [21] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1093' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [22] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1094' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [23] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1095' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [24] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1096' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [25] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1097' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [26] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1098' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [27] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1099' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [28] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1100' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [29] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1101' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [30] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1102' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1069 [31] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [31]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1143' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1146' in module `uart'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1151' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [0] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1153' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [2] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1154' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [3] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1155' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [4] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1156' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [5] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1157' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [6] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1158' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [7] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1159' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [8] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1160' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [9] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1161' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [10] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1162' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [11] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1163' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [12] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1164' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [13] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1165' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [14] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1166' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [15] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1167' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [16] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1168' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [17] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1169' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [18] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1170' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [19] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1171' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [20] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1172' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [21] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1173' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [22] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1174' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [23] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1175' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [24] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1176' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [25] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1177' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [26] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1178' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [27] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1179' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [28] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1180' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [29] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1181' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [30] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1182' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1149 [31] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [31]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1223' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1226' in module `uart'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1232' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [1] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1233' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [2] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1234' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [3] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1235' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [4] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1236' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [5] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1237' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [6] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1238' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [7] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1239' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [8] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1240' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [9] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1241' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [10] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1242' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [11] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1243' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [12] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1244' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [13] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1245' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [14] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1246' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [15] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1247' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [16] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1248' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [17] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1249' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [18] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1250' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [19] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1251' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [20] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1252' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [21] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1253' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [22] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1254' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [23] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1255' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [24] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1256' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [25] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1257' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [26] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1258' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [27] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1259' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [28] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1260' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [29] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1261' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [30] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1262' (?0) in module `\uart' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1229 [31] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [31]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1303' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1306' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1346' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1349' in module `uart'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2190' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$ternary$<techmap.v>:258$1353_Y [0] = \rx_cnt [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2154' (?0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$xor$<techmap.v>:263$1356_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$405.$xor$<techmap.v>:262$1355_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2191' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$ternary$<techmap.v>:258$1353_Y [1] = \rx_cnt [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2160' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$xor$<techmap.v>:262$1355_Y [1] = \rx_cnt [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2163' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$and$<techmap.v>:260$1354_Y [0] = \rx_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2429' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:212$2176_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2423' (?0) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$407 [0] = \rx_cnt [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2192' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$ternary$<techmap.v>:258$1353_Y [2] = \rx_cnt [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2161' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$xor$<techmap.v>:262$1355_Y [2] = \rx_cnt [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2164' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$and$<techmap.v>:260$1354_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2422' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$407 [1] = $techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:221$2178_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2193' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$ternary$<techmap.v>:258$1353_Y [3] = \rx_cnt [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2162' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$xor$<techmap.v>:262$1355_Y [3] = \rx_cnt [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2165' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$and$<techmap.v>:260$1354_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2419' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$407 [2] = $techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:229$2187_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1365' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1366' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1367' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1368' in module `uart'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2212' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$ternary$<techmap.v>:258$1353_Y [1] = \rx_sample_cnt [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2204' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$xor$<techmap.v>:262$1355_Y [1] = \rx_sample_cnt [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2207' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$and$<techmap.v>:260$1354_Y [0] = \rx_sample_cnt [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2619' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:212$2176_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2625' (?0) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$404 [0] = \rx_sample_cnt [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2213' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$ternary$<techmap.v>:258$1353_Y [2] = \rx_sample_cnt [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2205' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$xor$<techmap.v>:262$1355_Y [2] = \rx_sample_cnt [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2208' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$and$<techmap.v>:260$1354_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2626' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$404 [1] = $techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:221$2178_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2214' (??0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$ternary$<techmap.v>:258$1353_Y [3] = \rx_sample_cnt [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2206' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$xor$<techmap.v>:262$1355_Y [3] = \rx_sample_cnt [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2209' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$and$<techmap.v>:260$1354_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2629' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$404 [2] = $techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:229$2187_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1394' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1412' in module `uart'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1846' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1814' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [5] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1476' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [5] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1847' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1815' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [6] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1477' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [6] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1848' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1816' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [7] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1478' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [7] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1849' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1817' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [8] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1479' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [8] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1850' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1818' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [9] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1480' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [9] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1851' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1819' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [10] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1481' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [10] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1852' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1820' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [11] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1482' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [11] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1853' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1821' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [12] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1483' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [12] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1854' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1822' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [13] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1484' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [13] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1855' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1823' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [14] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1485' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [14] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1856' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1824' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [15] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1486' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [15] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1857' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1825' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [16] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1487' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [16] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1858' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1826' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [17] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1488' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [17] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1859' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1827' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [18] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1489' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [18] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1860' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1828' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [19] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1490' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [19] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1861' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1829' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [20] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1491' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [20] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1862' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1830' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [21] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1492' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [21] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1863' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1831' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [22] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1493' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [22] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1864' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1832' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [23] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1494' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [23] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1865' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1833' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [24] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1495' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [24] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1866' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1834' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [25] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1496' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [25] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1867' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1835' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [26] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1497' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [26] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1868' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1836' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [27] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1498' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [27] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1869' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1837' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [28] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1499' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [28] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1870' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1838' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [29] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1500' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [29] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1871' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1839' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [30] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1501' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [30] = 1'1'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1872' (0) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$not$<techmap.v>:258$493_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1840' (011) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$ternary$<techmap.v>:258$494_Y [31] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1502' (01) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [31] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1540' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2348' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1767_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2463' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [4] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1541' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2415' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1644_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2331' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1645_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2385' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1646_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2356' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1743_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2455' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [5] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1542' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2347' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1770_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2464' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [6] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2384' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1649_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2371' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1691_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2393' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1710_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1543' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2414' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1647_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2330' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1648_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2400' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1689_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2437' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1690_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2444' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [7] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1544' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2346' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1773_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2465' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [8] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1545' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2413' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1650_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2329' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1651_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2383' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1652_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2355' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1746_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2456' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [9] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1546' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2345' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1776_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2466' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [10] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2382' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1655_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2370' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1694_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2359' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1734_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1547' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2412' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1653_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2328' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1654_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2399' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1692_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2438' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1693_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2452' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [11] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1548' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2344' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1779_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2467' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [12] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1549' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2411' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1656_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2327' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1657_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2381' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1658_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2354' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1749_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2457' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [13] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1550' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2343' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1782_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2468' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [14] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2380' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1661_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2369' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1697_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2364' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1715_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2389' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1722_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2392' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1713_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1551' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2410' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1659_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2326' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1660_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2398' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1695_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2439' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1696_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2445' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1714_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2448' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [15] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1552' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2342' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1785_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2469' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [16] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1553' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2409' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1662_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2325' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1663_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2379' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1664_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2353' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1752_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2458' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [17] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1554' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2341' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1788_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2470' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [18] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2378' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1667_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2368' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1700_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2358' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1737_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1555' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2408' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1665_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2324' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1666_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2397' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1698_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2440' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1699_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2453' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [19] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1556' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2340' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1791_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2471' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [20] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2377' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1670_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2352' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1755_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1557' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2407' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1668_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2430' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1669_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2459' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [21] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1558' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2339' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1794_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2472' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [22] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2376' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1673_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2367' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1703_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2363' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1718_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2360' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1731_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2391' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1716_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2396' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1701_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1559' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2406' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1671_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2431' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1672_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2441' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1702_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2446' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1717_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2451' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [23] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1560' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [24] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2338' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1797_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2473' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [24] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2375' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1676_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2351' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1758_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1561' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2405' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1674_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2432' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1675_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2460' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [25] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1562' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [26] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2337' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1800_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2474' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [26] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2374' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1679_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2366' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1706_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2357' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1740_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2395' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1704_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1563' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2404' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1677_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2433' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1678_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2442' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1705_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2454' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [27] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1564' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [28] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2336' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1803_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2475' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [28] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2373' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1682_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2350' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1761_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1565' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2403' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1680_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2434' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1681_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2461' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [29] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1566' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [30] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2335' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1806_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2476' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [30] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2372' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1685_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2365' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1709_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2362' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1721_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2361' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:222$1727_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2387' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1728_Y = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2388' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1725_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2390' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1719_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2394' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1707_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1567' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$and$<techmap.v>:260$495_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2402' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1683_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2435' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1684_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2443' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1708_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2447' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1720_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2449' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$or$<techmap.v>:221$1726_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2450' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$410 [31] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1535' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [32] = $auto$alumacc.cc:484:replace_alu$410 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2024' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$and$<techmap.v>:260$495_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2523' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1685_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2530' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1709_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2533' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1721_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2534' (11) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:222$1727_Y = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2508' (1?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1728_Y = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2507' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1725_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2505' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1719_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2501' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1707_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2493' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1683_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2577' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1684_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2585' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1708_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2589' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1720_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2591' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$or$<techmap.v>:221$1726_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2592' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$413 [31] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2153' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [32] = $auto$alumacc.cc:484:replace_alu$413 [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2166' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$and$<techmap.v>:260$1354_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2427' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:221$2181_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2421' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$or$<techmap.v>:221$2182_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2420' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$407 [3] = $techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:221$2184_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2158' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$405.$xor$<techmap.v>:263$1356_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:221$2184_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2210' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$and$<techmap.v>:260$1354_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2621' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:221$2181_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2627' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$or$<techmap.v>:221$2182_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2628' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$404 [3] = $techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:221$2184_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2202' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$402.$xor$<techmap.v>:263$1356_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$402.lcu.$and$<techmap.v>:221$2184_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2231' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$and$<techmap.v>:260$1354_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2632' (const_and) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:221$2181_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2638' (00) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$or$<techmap.v>:221$2182_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2639' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$401 [3] = $techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:221$2184_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2223' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$399.$xor$<techmap.v>:263$1356_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:221$2184_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2651' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$396 [2] = $techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:229$2187_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2244' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$394.$xor$<techmap.v>:263$1356_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$394.lcu.$and$<techmap.v>:221$2184_Y'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2662' (0?) in module `\uart' with constant driver `$auto$alumacc.cc:484:replace_alu$391 [2] = $techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:229$2187_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2265' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$389.$xor$<techmap.v>:263$1356_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$389.lcu.$and$<techmap.v>:221$2184_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2286' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:263$1420_Y [4] = $auto$alumacc.cc:484:replace_alu$377 [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2307' (0?) in module `\uart' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:263$1420_Y [4] = $auto$alumacc.cc:484:replace_alu$384 [3]'.

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1533' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [30] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1533' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1509' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1509' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2130' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2130' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1524' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [21] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1524' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2128' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2128' from module `\uart'.
  Cell `$auto$simplemap.cc:37:simplemap_not$2238' is identical to cell `$auto$simplemap.cc:37:simplemap_not$2259'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$399.$not$<techmap.v>:258$1352_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [2]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2238' from module `\uart'.
  Cell `$auto$simplemap.cc:37:simplemap_not$2239' is identical to cell `$auto$simplemap.cc:37:simplemap_not$2260'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$399.$not$<techmap.v>:258$1352_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [3]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2239' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2143' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [22] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2143' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1511' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1511' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2140' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [19] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2140' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1516' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1516' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1526' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [23] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1526' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1534' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [31] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1534' from module `\uart'.
  Cell `$auto$simplemap.cc:37:simplemap_not$2196' is identical to cell `$auto$simplemap.cc:37:simplemap_not$2280'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$405.$not$<techmap.v>:258$1352_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [2]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2196' from module `\uart'.
  Cell `$auto$simplemap.cc:37:simplemap_not$2197' is identical to cell `$auto$simplemap.cc:37:simplemap_not$2281'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$405.$not$<techmap.v>:258$1352_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [3]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2197' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1532' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [29] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1532' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1518' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1518' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1520' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [17] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1520' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2151' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [30] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2151' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2152' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [31] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2152' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1281' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [15] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1281' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1280' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1324'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [14] = $auto$simplemap.cc:168:logic_reduce$1309 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1280' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1279' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [13] = $auto$simplemap.cc:168:logic_reduce$1309 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1279' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1278' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1322'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [12] = $auto$simplemap.cc:168:logic_reduce$1309 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1278' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1277' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1321'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [11] = $auto$simplemap.cc:168:logic_reduce$1309 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1277' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1276' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1320'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [10] = $auto$simplemap.cc:168:logic_reduce$1309 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1276' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1275' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1319'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [9] = $auto$simplemap.cc:168:logic_reduce$1309 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1275' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1274' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1318'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [8] = $auto$simplemap.cc:168:logic_reduce$1309 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1274' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1273' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1317'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [7] = $auto$simplemap.cc:168:logic_reduce$1309 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1273' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1272' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1316'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [6] = $auto$simplemap.cc:168:logic_reduce$1309 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1272' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1271' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1315'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [5] = $auto$simplemap.cc:168:logic_reduce$1309 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1271' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1270' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1314'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [4] = $auto$simplemap.cc:168:logic_reduce$1309 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1270' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1269' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1313'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [3] = $auto$simplemap.cc:168:logic_reduce$1309 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1269' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1268' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1312'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [2] = $auto$simplemap.cc:168:logic_reduce$1309 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1268' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1267' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1311'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [1] = $auto$simplemap.cc:168:logic_reduce$1309 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1267' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2147' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [26] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2147' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1529' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [26] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1529' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2138' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [17] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2138' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1201' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [15] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1201' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1200' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1324'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [14] = $auto$simplemap.cc:168:logic_reduce$1309 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1200' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1198' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1322'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [12] = $auto$simplemap.cc:168:logic_reduce$1309 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1198' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1197' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1321'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [11] = $auto$simplemap.cc:168:logic_reduce$1309 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1197' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1196' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1320'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [10] = $auto$simplemap.cc:168:logic_reduce$1309 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1196' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1195' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1319'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [9] = $auto$simplemap.cc:168:logic_reduce$1309 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1195' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1193' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1317'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [7] = $auto$simplemap.cc:168:logic_reduce$1309 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1193' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1192' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1316'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [6] = $auto$simplemap.cc:168:logic_reduce$1309 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1192' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1191' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1315'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [5] = $auto$simplemap.cc:168:logic_reduce$1309 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1191' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1190' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1314'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [4] = $auto$simplemap.cc:168:logic_reduce$1309 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1190' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1189' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1313'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [3] = $auto$simplemap.cc:168:logic_reduce$1309 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1189' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1188' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1312'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [2] = $auto$simplemap.cc:168:logic_reduce$1309 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1188' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1187' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1311'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [1] = $auto$simplemap.cc:168:logic_reduce$1309 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1187' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1121' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [15] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1121' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1120' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1324'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [14] = $auto$simplemap.cc:168:logic_reduce$1309 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1120' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1119' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [13] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1119' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1118' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1322'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [12] = $auto$simplemap.cc:168:logic_reduce$1309 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1118' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1117' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1321'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [11] = $auto$simplemap.cc:168:logic_reduce$1309 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1117' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1116' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1320'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [10] = $auto$simplemap.cc:168:logic_reduce$1309 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1116' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1115' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1319'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [9] = $auto$simplemap.cc:168:logic_reduce$1309 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1115' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1114' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1194'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [8] = $auto$simplemap.cc:127:simplemap_reduce$1185 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1114' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1113' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1317'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [7] = $auto$simplemap.cc:168:logic_reduce$1309 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1113' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1112' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1316'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [6] = $auto$simplemap.cc:168:logic_reduce$1309 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1112' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1111' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1315'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [5] = $auto$simplemap.cc:168:logic_reduce$1309 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1111' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1110' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1314'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [4] = $auto$simplemap.cc:168:logic_reduce$1309 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1110' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1109' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1313'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [3] = $auto$simplemap.cc:168:logic_reduce$1309 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1109' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1108' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1312'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [2] = $auto$simplemap.cc:168:logic_reduce$1309 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1108' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1107' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1311'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1105 [1] = $auto$simplemap.cc:168:logic_reduce$1309 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1107' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1072' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1152'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1069 [1] = $auto$simplemap.cc:250:simplemap_eqne$1149 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1072' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1071' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1231'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1069 [0] = $auto$simplemap.cc:250:simplemap_eqne$1229 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1071' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1041' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [15] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1041' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1040' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1324'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [14] = $auto$simplemap.cc:168:logic_reduce$1309 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1040' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1039' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [13] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1039' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1038' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1322'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [12] = $auto$simplemap.cc:168:logic_reduce$1309 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1038' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1037' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1321'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [11] = $auto$simplemap.cc:168:logic_reduce$1309 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1037' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1036' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1320'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [10] = $auto$simplemap.cc:168:logic_reduce$1309 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1036' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1035' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1319'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [9] = $auto$simplemap.cc:168:logic_reduce$1309 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1035' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1034' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1194'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [8] = $auto$simplemap.cc:127:simplemap_reduce$1185 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1034' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1033' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1317'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [7] = $auto$simplemap.cc:168:logic_reduce$1309 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1033' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1032' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1316'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [6] = $auto$simplemap.cc:168:logic_reduce$1309 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1032' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1031' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1315'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [5] = $auto$simplemap.cc:168:logic_reduce$1309 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1031' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1030' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1314'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [4] = $auto$simplemap.cc:168:logic_reduce$1309 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1030' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1029' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1313'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [3] = $auto$simplemap.cc:168:logic_reduce$1309 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1029' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1028' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1312'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [2] = $auto$simplemap.cc:168:logic_reduce$1309 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1028' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1026' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1310'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1025 [0] = $auto$simplemap.cc:168:logic_reduce$1309 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1026' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2134' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2134' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1508' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1508' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2150' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [29] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2150' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2136' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2136' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$961' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [15] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$961' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$959' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [13] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$959' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$958' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1322'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [12] = $auto$simplemap.cc:168:logic_reduce$1309 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$958' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$957' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1321'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [11] = $auto$simplemap.cc:168:logic_reduce$1309 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$957' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$956' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1320'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [10] = $auto$simplemap.cc:168:logic_reduce$1309 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$956' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$955' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1319'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [9] = $auto$simplemap.cc:168:logic_reduce$1309 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$955' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$954' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1194'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [8] = $auto$simplemap.cc:127:simplemap_reduce$1185 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$954' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$951' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1315'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [5] = $auto$simplemap.cc:168:logic_reduce$1309 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$951' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$950' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1314'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [4] = $auto$simplemap.cc:168:logic_reduce$1309 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$950' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$949' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1313'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [3] = $auto$simplemap.cc:168:logic_reduce$1309 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$949' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$948' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1312'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [2] = $auto$simplemap.cc:168:logic_reduce$1309 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$948' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1515' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1515' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1528' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [25] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1528' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2149' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [28] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2149' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2634' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2676'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$399.lcu.$and$<techmap.v>:222$2183_Y = $techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:221$2181_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2634' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1512' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1512' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2132' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2132' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2148' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [27] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2148' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2133' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2133' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2139' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [18] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2139' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2142' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [21] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2142' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1530' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [27] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1530' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2127' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2127' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1525' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [22] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1525' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2309' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1472'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:262$1419_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2309' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2667' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1407'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:222$2183_Y = $auto$simplemap.cc:127:simplemap_reduce$1406 [0]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2667' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2664' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1408'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:221$2178_Y = $auto$simplemap.cc:127:simplemap_reduce$1406 [1]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2664' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2678' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1397'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:222$2183_Y = $auto$simplemap.cc:127:simplemap_reduce$1396 [0]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2678' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$913' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$993'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$909 [2] = $auto$simplemap.cc:250:simplemap_eqne$989 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$913' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$911' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1231'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$909 [0] = $auto$simplemap.cc:250:simplemap_eqne$1229 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$911' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$881' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [15] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$881' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$880' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [14] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$880' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$879' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [13] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$879' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$878' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1322'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [12] = $auto$simplemap.cc:168:logic_reduce$1309 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$878' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$877' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1321'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [11] = $auto$simplemap.cc:168:logic_reduce$1309 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$877' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$875' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [9] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$875' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$874' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1194'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [8] = $auto$simplemap.cc:127:simplemap_reduce$1185 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$874' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$873' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$953'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [7] = $auto$simplemap.cc:127:simplemap_reduce$945 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$873' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$872' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [6] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$872' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$871' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [5] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$871' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$870' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1314'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [4] = $auto$simplemap.cc:168:logic_reduce$1309 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$870' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$869' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [3] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$869' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$868' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1312'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [2] = $auto$simplemap.cc:168:logic_reduce$1309 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$868' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2310' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1473'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:262$1419_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:262$496_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2310' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2141' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [20] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2141' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2144' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [23] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2144' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2121' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2282'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:263$1420_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2121' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2129' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2129' from module `\uart'.
  Cell `$auto$simplemap.cc:37:simplemap_not$2236' is identical to cell `$auto$simplemap.cc:37:simplemap_not$2257'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$399.$not$<techmap.v>:258$1352_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [0]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2236' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1503' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2303'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:263$1420_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1503' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2304' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1504'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:263$1420_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2304' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1531' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [28] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1531' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$833' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$993'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$829 [2] = $auto$simplemap.cc:250:simplemap_eqne$989 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$833' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$832' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1152'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$829 [1] = $auto$simplemap.cc:250:simplemap_eqne$1149 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$832' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2289' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2091'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:262$1419_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2289' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$801' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [15] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$801' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$800' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [14] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$800' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$799' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [13] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$799' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$798' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1322'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [12] = $auto$simplemap.cc:168:logic_reduce$1309 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$798' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$797' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [11] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$797' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$796' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [10] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$796' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$795' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [9] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$795' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$794' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1194'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [8] = $auto$simplemap.cc:127:simplemap_reduce$1185 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$794' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$793' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$953'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [7] = $auto$simplemap.cc:127:simplemap_reduce$945 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$793' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$792' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [6] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$792' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$791' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [5] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$791' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$790' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [4] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$790' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$789' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1325'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [3] = $auto$simplemap.cc:168:logic_reduce$1309 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$789' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$788' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1312'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [2] = $auto$simplemap.cc:168:logic_reduce$1309 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$788' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2675' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2417'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:221$2178_Y = $techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1638_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2675' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2126' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2126' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2125' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2125' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2145' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [24] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2145' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2137' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [16] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2137' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1519' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [16] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1519' from module `\uart'.
  Cell `$auto$simplemap.cc:37:simplemap_not$2194' is identical to cell `$auto$simplemap.cc:37:simplemap_not$2278'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$405.$not$<techmap.v>:258$1352_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [0]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2194' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2425' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2665'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$405.lcu.$and$<techmap.v>:222$2183_Y = $techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:221$2181_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2425' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1510' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1510' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2159' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2282'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$405.$xor$<techmap.v>:262$1355_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:263$1420_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2159' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2146' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [25] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2146' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$753' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$993'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$749 [2] = $auto$simplemap.cc:250:simplemap_eqne$989 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$753' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$752' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1152'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$749 [1] = $auto$simplemap.cc:250:simplemap_eqne$1149 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$752' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2224' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2303'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$399.$xor$<techmap.v>:262$1355_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:263$1420_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2224' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2288' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2090'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:262$1419_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:262$496_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2288' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1522' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [19] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1522' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1527' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [24] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1527' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1523' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [20] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1523' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1514' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1514' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1507' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1507' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$463' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2203'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$461 [0] = $techmap$auto$alumacc.cc:470:replace_alu$402.$xor$<techmap.v>:262$1355_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$463' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1517' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1517' from module `\uart'.
  Cell `$auto$simplemap.cc:37:simplemap_not$2237' is identical to cell `$auto$simplemap.cc:37:simplemap_not$2258'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$399.$not$<techmap.v>:258$1352_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$394.$not$<techmap.v>:258$1352_Y [1]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2237' from module `\uart'.
  Cell `$auto$simplemap.cc:37:simplemap_not$2195' is identical to cell `$auto$simplemap.cc:37:simplemap_not$2279'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$405.$not$<techmap.v>:258$1352_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$389.$not$<techmap.v>:258$1352_Y [1]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$2195' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1521' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [18] = $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1521' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2135' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2131'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2135' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1194' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1185 [8] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1194' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1130' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1210'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1122 [7] = $auto$simplemap.cc:127:simplemap_reduce$1202 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1130' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1129' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1209'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1122 [6] = $auto$simplemap.cc:127:simplemap_reduce$1202 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1129' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1128' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1208'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1122 [5] = $auto$simplemap.cc:127:simplemap_reduce$1202 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1128' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1126' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1206'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1122 [3] = $auto$simplemap.cc:127:simplemap_reduce$1202 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1126' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1125' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1205'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1122 [2] = $auto$simplemap.cc:127:simplemap_reduce$1202 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1125' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1124' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1204'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1122 [1] = $auto$simplemap.cc:127:simplemap_reduce$1202 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1124' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1050' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1210'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1042 [7] = $auto$simplemap.cc:127:simplemap_reduce$1202 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1050' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1049' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1209'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1042 [6] = $auto$simplemap.cc:127:simplemap_reduce$1202 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1049' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1048' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1208'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1042 [5] = $auto$simplemap.cc:127:simplemap_reduce$1202 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1048' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1047' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1042 [4] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1047' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1046' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1206'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1042 [3] = $auto$simplemap.cc:127:simplemap_reduce$1202 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1046' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1045' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1205'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1042 [2] = $auto$simplemap.cc:127:simplemap_reduce$1202 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1045' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1044' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1204'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1042 [1] = $auto$simplemap.cc:127:simplemap_reduce$1202 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1044' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2417' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1398'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:221$1638_Y = $auto$simplemap.cc:127:simplemap_reduce$1396 [1]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2417' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$969' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1209'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$962 [6] = $auto$simplemap.cc:127:simplemap_reduce$1202 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$969' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$968' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1208'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$962 [5] = $auto$simplemap.cc:127:simplemap_reduce$1202 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$968' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$967' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$962 [4] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$967' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$965' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1205'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$962 [2] = $auto$simplemap.cc:127:simplemap_reduce$1202 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$965' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$964' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1204'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$962 [1] = $auto$simplemap.cc:127:simplemap_reduce$1202 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$964' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$960' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [14] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$960' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$953' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [7] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$953' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$952' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [6] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$952' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$947' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1027'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$945 [1] = $auto$simplemap.cc:127:simplemap_reduce$1025 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$947' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2122' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2283'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:263$1420_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2122' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$886' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$887'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$882 [3] = $auto$simplemap.cc:127:simplemap_reduce$882 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$886' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$876' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [10] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$876' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1334' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1210'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1326 [7] = $auto$simplemap.cc:127:simplemap_reduce$1202 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1334' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1332' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1208'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1326 [5] = $auto$simplemap.cc:127:simplemap_reduce$1202 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1332' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$867' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1027'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [1] = $auto$simplemap.cc:127:simplemap_reduce$1025 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$867' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$866' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1186'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$865 [0] = $auto$simplemap.cc:127:simplemap_reduce$1185 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$866' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1330' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1206'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1326 [3] = $auto$simplemap.cc:127:simplemap_reduce$1202 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1330' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2333' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2681'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$410 [1] = $auto$alumacc.cc:484:replace_alu$384 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2333' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1329' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1205'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1326 [2] = $auto$simplemap.cc:127:simplemap_reduce$1202 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1329' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1328' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1204'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1326 [1] = $auto$simplemap.cc:127:simplemap_reduce$1202 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1328' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1325' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [15] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1325' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1324' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [14] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1324' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1505' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2305'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$408.$xor$<techmap.v>:263$497_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$382.$xor$<techmap.v>:263$1420_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1505' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1323' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [13] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1323' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1322' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [12] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1322' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1321' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [11] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1321' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1320' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [10] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1320' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1319' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [9] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1319' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1318' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [8] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1318' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$809' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$802 [6] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$809' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$808' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$802 [5] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$808' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$807' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$802 [4] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$807' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$806' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$802 [3] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$806' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$805' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$802 [2] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$805' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1317' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [7] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1317' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1316' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [6] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1316' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1315' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [5] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1315' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1314' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [4] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1314' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1313' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [3] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1313' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1312' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1199'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1309 [2] = $auto$simplemap.cc:127:simplemap_reduce$1185 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1312' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$787' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1027'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [1] = $auto$simplemap.cc:127:simplemap_reduce$1025 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$787' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1290' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1282 [7] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1290' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1289' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1282 [6] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1289' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1288' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1282 [5] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1288' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1287' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1282 [4] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1287' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2478' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1408'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:221$1638_Y = $auto$simplemap.cc:127:simplemap_reduce$1406 [1]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2478' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1286' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1282 [3] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1286' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1285' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1282 [2] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1285' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1284' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$810'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1282 [1] = $auto$simplemap.cc:127:simplemap_reduce$802 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1284' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$751' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1231'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$749 [0] = $auto$simplemap.cc:250:simplemap_eqne$1229 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$751' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1055' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1135'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1051 [3] = $auto$simplemap.cc:127:simplemap_reduce$1131 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1055' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1054' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1134'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1051 [2] = $auto$simplemap.cc:127:simplemap_reduce$1131 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1054' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1053' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1133'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1051 [1] = $auto$simplemap.cc:127:simplemap_reduce$1131 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1053' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$974' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1134'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$971 [2] = $auto$simplemap.cc:127:simplemap_reduce$1131 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$974' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$970' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$962 [7] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$970' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$966' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$962 [3] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$966' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2670' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2562'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$377 [1] = $auto$alumacc.cc:484:replace_alu$413 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2670' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$890' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$882 [7] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$890' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$889' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$882 [6] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$889' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$888' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$882 [5] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$888' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$887' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$882 [4] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$887' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$885' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$882 [2] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$885' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$884' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$882 [1] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$884' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1337' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1133'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1335 [1] = $auto$simplemap.cc:127:simplemap_reduce$1131 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1337' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1333' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1326 [6] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1333' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1331' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1326 [4] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1331' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2679' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2349'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$382.lcu.$and$<techmap.v>:229$2187_Y = $techmap$auto$alumacc.cc:470:replace_alu$408.lcu.$and$<techmap.v>:229$1764_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2679' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1215' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1135'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1211 [3] = $auto$simplemap.cc:127:simplemap_reduce$1131 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1215' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1213' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1133'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1211 [1] = $auto$simplemap.cc:127:simplemap_reduce$1131 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1213' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1210' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1202 [7] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1210' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1209' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1202 [6] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1209' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1208' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1202 [5] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1208' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1207' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1202 [4] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1207' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1206' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1202 [3] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1206' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1205' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1202 [2] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1205' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1204' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1202 [1] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1204' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$814' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$815'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$811 [2] = $auto$simplemap.cc:127:simplemap_reduce$811 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$814' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$813' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$815'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$811 [1] = $auto$simplemap.cc:127:simplemap_reduce$811 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$813' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$810' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$802 [7] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$810' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$804' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1127'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$802 [1] = $auto$simplemap.cc:127:simplemap_reduce$1122 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$804' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1294' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1295'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1291 [2] = $auto$simplemap.cc:127:simplemap_reduce$1291 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1294' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1293' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1295'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1291 [1] = $auto$simplemap.cc:127:simplemap_reduce$1291 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1293' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$786' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1106'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$785 [0] = $auto$simplemap.cc:127:simplemap_reduce$1105 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$786' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2668' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2546'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$375.lcu.$and$<techmap.v>:229$2187_Y = $techmap$auto$alumacc.cc:470:replace_alu$411.lcu.$and$<techmap.v>:229$1764_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2668' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1266' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$946'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1265 [0] = $auto$simplemap.cc:127:simplemap_reduce$945 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1266' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$973' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$971 [1] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$973' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2462' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2684'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$410 [2] = $auto$alumacc.cc:484:replace_alu$384 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2462' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2123' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2284'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$411.$xor$<techmap.v>:263$497_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$375.$xor$<techmap.v>:263$1420_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2123' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$895' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$891 [3] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$895' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$894' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$891 [2] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$894' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$893' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$891 [1] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$893' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1339' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1335 [3] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1339' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1338' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1335 [2] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1338' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1214' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1211 [2] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1214' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$815' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$811 [3] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$815' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1138' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1058'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1136 [1] = $auto$simplemap.cc:127:simplemap_reduce$1056 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1138' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1295' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1291 [3] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1295' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1135' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1131 [3] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1135' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1134' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1131 [2] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1134' from module `\uart'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2604' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2673'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$413 [2] = $auto$alumacc.cc:484:replace_alu$377 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2604' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1133' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$975'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1131 [1] = $auto$simplemap.cc:127:simplemap_reduce$971 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1133' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$978' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1058'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$976 [1] = $auto$simplemap.cc:127:simplemap_reduce$1056 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$978' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$898' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1058'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$896 [1] = $auto$simplemap.cc:127:simplemap_reduce$1056 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$898' from module `\uart'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1342' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1058'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1340 [1] = $auto$simplemap.cc:127:simplemap_reduce$1056 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1342' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1218' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1058'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1216 [1] = $auto$simplemap.cc:127:simplemap_reduce$1056 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1218' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$818' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1058'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$816 [1] = $auto$simplemap.cc:127:simplemap_reduce$1056 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$818' from module `\uart'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1298' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1058'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1296 [1] = $auto$simplemap.cc:127:simplemap_reduce$1056 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1298' from module `\uart'.
Removed a total of 304 cells.

3.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$475'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$491'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$822'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$902'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$982'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1062'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1142'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1222'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1302'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$1345'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1881'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1882'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1883'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1884'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1885'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1886'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1887'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1888'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1889'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1890'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1891'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1892'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1893'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1894'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1895'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1896'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1913'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1914'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1915'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1916'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1917'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1918'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1919'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1920'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1923'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1924'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1925'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1926'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1927'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1928'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1929'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1930'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1931'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1932'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1933'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1934'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1935'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1936'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1937'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1938'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1939'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1940'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1941'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1942'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1943'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1944'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1949'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1950'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1951'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1952'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1953'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1954'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1955'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1956'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1957'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1958'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1959'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1960'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1961'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1962'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1963'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1964'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1965'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1966'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1967'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1968'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1970'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1971'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1972'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1973'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1974'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1975'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1976'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1977'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1978'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1979'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1980'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1981'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1982'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1983'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1984'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1985'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1986'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1987'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1988'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1989'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1990'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1991'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$1992'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2215'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2216'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2217'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2218'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2240'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2241'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2242'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2243'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2261'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2262'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2263'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2264'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2285'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2306'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2426'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2622'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2623'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2633'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2646'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2657'.

3.19.5. Finished fast OPT passes.

3.20. Executing ABC pass (technology mapping using ABC).

3.20.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 302 gates and 358 wires to a netlist network with 53 inputs and 40 outputs.

3.20.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

3.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       48
ABC RESULTS:              AOI3 cells:        4
ABC RESULTS:               MUX cells:      101
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:       19
ABC RESULTS:               NOT cells:       22
ABC RESULTS:              OAI3 cells:       10
ABC RESULTS:              OAI4 cells:        8
ABC RESULTS:                OR cells:       15
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       12
ABC RESULTS:        internal signals:      265
ABC RESULTS:           input signals:       53
ABC RESULTS:          output signals:       40
Removing temp directory.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2727' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2728' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2857' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2778' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2779' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2843' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2764' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2759' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2760' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2805' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2806' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2851' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2753' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2754' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2746' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2747' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2736' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2737' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2849' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2847' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2853' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2797' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2791' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2845' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2855' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2787' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2783' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2771' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2772' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2765' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2716' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2907' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2908' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2914' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2915' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2921' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2922' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2928' in module `uart'.
Optimizing away select inverter for $_MUX_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2717' in module `uart'.

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
  Cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2720' is identical to cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2688'.
    Redirecting output \Y: $abc$2685$n128 = $abc$2685$n96
    Removing $_NOR_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2720' from module `\uart'.
  Cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2767' is identical to cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2729'.
    Redirecting output \Y: $abc$2685$n176_1 = $abc$2685$n137
    Removing $_AND_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2767' from module `\uart'.
  Cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2861' is identical to cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2860'.
    Redirecting output \Y: $abc$2685$n270 = $abc$2685$n269_1
    Removing $_NOR_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2861' from module `\uart'.
  Cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2870' is identical to cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2862'.
    Redirecting output \Y: $abc$2685$n279_1 = $abc$2685$n271_1
    Removing $_NOR_ cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2870' from module `\uart'.
Removed a total of 4 cells.

3.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
  removing unused `$_NOT_' cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2841'.
  removing unused `$_NOT_' cell `$abc$2685$auto$blifparse.cc:286:parse_blif$2686'.

3.21.5. Finished fast OPT passes.

3.22. Executing HIERARCHY pass (managing design hierarchy).

3.22.1. Analyzing design hierarchy..
Top module:  \uart

3.22.2. Analyzing design hierarchy..
Top module:  \uart
Removed 0 unused modules.

3.23. Printing statistics.

=== uart ===

   Number of wires:                229
   Number of wire bits:            296
   Number of public wires:          21
   Number of public wire bits:      58
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                280
     $_AND_                         47
     $_AOI3_                         4
     $_DFF_PP0_                     37
     $_DFF_PP1_                      5
     $_MUX_                        101
     $_NAND_                         3
     $_NOR_                         16
     $_NOT_                         20
     $_OAI3_                        10
     $_OAI4_                         8
     $_OR_                          15
     $_XNOR_                         2
     $_XOR_                         12

3.24. Executing CHECK pass (checking for obvious problems).
checking module uart..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=864.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=864.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=1584.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\uart':
  mapped 37 $_DFF_PP0_ cells to \DFFSR cells.
  mapped 5 $_DFF_PP1_ cells to \DFFSR cells.

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2930' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2931 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2930' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2932' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2933 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2932' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2934' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2935 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2934' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2936' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2937 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2936' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2938' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2939 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2938' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2940' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2941 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2940' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2942' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2943 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2942' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2944' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2945 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2944' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2946' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2947 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2946' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2948' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2949 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2948' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2950' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2951 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2950' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2952' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2953 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2952' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2954' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2955 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2954' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2956' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2957 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2956' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2958' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2959 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2958' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2960' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2961 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2960' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2962' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2963 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2962' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2964' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2965 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2964' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2966' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2967 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2966' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2968' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2969 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2968' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2970' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2971 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2970' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2972' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2973 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2972' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2974' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2975 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2974' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2976' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2977 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2976' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2978' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2979 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2978' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2980' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2981 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2980' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2982' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2983 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2982' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2984' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2985 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2984' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2986' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2987 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2986' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2988' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2989 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2988' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2990' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2991 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2990' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2992' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2993 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2992' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2994' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2995 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2994' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2996' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2997 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2996' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$2998' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$2999 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$2998' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$3000' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$3001 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$3000' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$3002' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$3003 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$3002' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$3004' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$3005 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$3004' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$3006' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$3007 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$3006' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$3008' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$3009 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$3008' from module `\uart'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$3010' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$3012'.
    Redirecting output \Y: $auto$rtlil.cc:1731:NotGate$3011 = $auto$rtlil.cc:1731:NotGate$3013
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$3010' from module `\uart'.
Removed a total of 41 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

5.6. Executing OPT_RMDFF pass (remove dff with constant values).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

5.8. Executing OPT_EXPR pass (perform const folding).

5.9. Finished OPT passes. (There is nothing left to do.)

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 239 gates and 293 wires to a netlist network with 54 inputs and 41 outputs.

6.1.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu050/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.01 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/usr/share/qflow/tech/osu050/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        4
ABC RESULTS:           AOI21X1 cells:       15
ABC RESULTS:           AOI22X1 cells:        1
ABC RESULTS:             INVX1 cells:       47
ABC RESULTS:            MUX2X1 cells:       10
ABC RESULTS:           NAND2X1 cells:       31
ABC RESULTS:           NAND3X1 cells:       30
ABC RESULTS:            NOR2X1 cells:       27
ABC RESULTS:            NOR3X1 cells:        2
ABC RESULTS:           OAI21X1 cells:       35
ABC RESULTS:           OAI22X1 cells:        1
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:      198
ABC RESULTS:           input signals:       54
ABC RESULTS:          output signals:       41
Removing temp directory.

7. Executing FLATTEN pass (flatten design).
No more expansions possible.
Removed 0 unused cells and 293 unused wires.

8. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port uart.ld_tx_data: Missing option -inpad.
Don't map input port uart.reset: Missing option -inpad.
Mapping port uart.rx_data using BUFX2.
Mapping port uart.rx_empty using BUFX2.
Don't map input port uart.rx_enable: Missing option -inpad.
Don't map input port uart.rx_in: Missing option -inpad.
Don't map input port uart.rxclk: Missing option -inpad.
Don't map input port uart.tx_data: Missing option -inpad.
Mapping port uart.tx_empty using BUFX2.
Don't map input port uart.tx_enable: Missing option -inpad.
Mapping port uart.tx_out using BUFX2.
Don't map input port uart.txclk: Missing option -inpad.
Don't map input port uart.uld_rx_data: Missing option -inpad.

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

9.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

9.8. Executing OPT_EXPR pass (perform const folding).

9.9. Finished OPT passes. (There is nothing left to do.)

10. Executing BLIF backend.

End of script. Logfile hash: 83b6922396
CPU: user 1.79s system 0.04s, MEM: 43.36 MB total, 15.66 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 18% 18x opt_merge (0 sec), 16% 20x opt_expr (0 sec), ...
Cleaning up output syntax
Cleaning Up blif file syntax
Running blifFanout (iterative)

Parsing library "osu05_stdcells"
End of library at line 6606
Lib Read:  Processed 6607 lines.
Top internal fanout is 42 (load 1807.54) from node _166_,
driven by INVX1 with strength 166.776 (fF driven at latency 300)
Top fanout load-to-strength ratio is 10.8382 (latency = 3251.45 ps)
Top input node fanout is 28 (load 486.677) from node rxclk.
Warning 1: load of 177.668 is 1.07976 times greater than strongest gate NAND3X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 220.586 is 1.3306 times greater than strongest gate NAND2X1
Warning 3: load of 490.167 is 1.41593 times greater than strongest gate AND2X2
Warning 7: load of 318.65 is 1.91117 times greater than strongest gate DFFSR
Warning 16: load of 377.059 is 2.2615 times greater than strongest gate DFFSR
Warning 18: load of 389.493 is 2.33607 times greater than strongest gate DFFSR
Warning 47: load of 425.572 is 2.55246 times greater than strongest gate DFFSR
47 gates exceed specified minimum load.
15 buffers were added.
5 gates were changed.

Gate counts by drive strength:

	"" gates	In: 42    	Out: 42    	+0
	"1" gates	In: 200    	Out: 195    	-5
	"2" gates	In: 17    	Out: 21    	+4

gates resized: 20
Parsing library "osu05_stdcells"
End of library at line 6606
Lib Read:  Processed 6607 lines.
Top internal fanout is 10 (load 480.167) from node rx_busy,
driven by DFFSR with strength 166.73 (fF driven at latency 300)
Top fanout load-to-strength ratio is 2.49249 (latency = 747.746 ps)
Top input node fanout is 14 (load 226.069) from node txclk.
Warning 1: load of 177.668 is 1.07976 times greater than strongest gate NAND3X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 220.586 is 1.3306 times greater than strongest gate NAND2X1
Warning 3: load of 490.167 is 1.41593 times greater than strongest gate AND2X2
Warning 6: load of 318.65 is 1.91117 times greater than strongest gate DFFSR
Warning 15: load of 394.19 is 2.36424 times greater than strongest gate DFFSR
Warning 46: load of 425.572 is 2.55246 times greater than strongest gate DFFSR
46 gates exceed specified minimum load.
0 buffers were added.
6 gates were changed.

Gate counts by drive strength:

	"" gates	In: 42    	Out: 42    	+0
	"1" gates	In: 195    	Out: 195    	+0
	"2" gates	In: 36    	Out: 30    	-6
	"8" gates	In: 1    	Out: 1    	+0

gates resized: 6
Parsing library "osu05_stdcells"
End of library at line 6606
Lib Read:  Processed 6607 lines.
Top internal fanout is 10 (load 677.417) from node rx_busy,
driven by DFFSR with strength 166.73 (fF driven at latency 300)
Top fanout load-to-strength ratio is 2.49249 (latency = 747.746 ps)
Top input node fanout is 14 (load 226.069) from node txclk.
Warning 1: load of 177.668 is 1.07976 times greater than strongest gate NAND3X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 220.586 is 1.3306 times greater than strongest gate NAND2X1
Warning 3: load of 490.167 is 1.41593 times greater than strongest gate AND2X2
Warning 6: load of 318.65 is 1.91117 times greater than strongest gate DFFSR
Warning 15: load of 394.19 is 2.36424 times greater than strongest gate DFFSR
Warning 46: load of 425.572 is 2.55246 times greater than strongest gate DFFSR
46 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"" gates	In: 42    	Out: 42    	+0
	"1" gates	In: 195    	Out: 195    	+0
	"2" gates	In: 30    	Out: 30    	+0
	"4" gates	In: 6    	Out: 6    	+0
	"8" gates	In: 1    	Out: 1    	+0

gates resized: 0

Generating RTL verilog and SPICE netlist file in directory
	 /home/mariajesus1399/Escritorio/Qflow/ejercicio1/uart/synthesis
Files:
   Verilog: /home/mariajesus1399/Escritorio/Qflow/ejercicio1/uart/synthesis/uart.rtl.v
   Verilog: /home/mariajesus1399/Escritorio/Qflow/ejercicio1/uart/synthesis/uart.rtlnopwr.v
   Spice:   /home/mariajesus1399/Escritorio/Qflow/ejercicio1/uart/synthesis/uart.spc

Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
Synthesis script ended on dom 15 nov 21:54:53 CST 2020
